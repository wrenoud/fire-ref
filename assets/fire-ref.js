eval("//# sourceURL=vendor/ember-cli/loader.js");eval('define("fire-ref/adapters/application", \n  ["ember-data","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    \r\n    //export default DS.RESTAdapter.extend({\r\n    //});\r\n    \r\n    __exports__["default"] = DS.LSAdapter.extend({\r\n        namespace: \'wrenoud/fire-ref\'\r\n    });\r\n    \r\n    // export default DS.Adapter.extend({\r\n    //   find: function(store, type, id) {\r\n    //     var client = Ember.Application.client;\r\n    \r\n    //     if(type.contains(\':user:\')){\r\n    //       return client.getAccountInfo({},function(error, account){\r\n    //           var dets = account.json();\r\n    //           dets.id = account.uid;\r\n    //           store.load(type, account.uid, dets);\r\n    //           return dets;\r\n    //         })\r\n    //     }\r\n    //   },\r\n    //   findAll:  function(store, type) {\r\n    //     var client = Ember.Application.client;\r\n    //     if(type.toString().indexOf(\':user:\')>=0){\r\n    //       return client.getAccountInfo({},function(error, account){\r\n    //           console.log(account.uid);\r\n    //           return [account];\r\n    //         });\r\n    //     }\r\n    //   }\r\n    // });\n  });//# sourceURL=fire-ref/adapters/application.js');
eval('define("fire-ref/app", \n  ["ember","ember/resolver","ember/load-initializers","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var Resolver = __dependency2__["default"];\n    var loadInitializers = __dependency3__["default"];\n    var config = __dependency4__["default"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    Ember.Application.make_resizable = function(parent_id, min_width){\n    \t/**\n    \t// in the template\n    \t<div id="resizable_panel">\n    \t\t<div class="left subpanel scrollable">\n    \t\t</div>\n\n    \t\t<div class="dragger">\n    \t\t</div>\n\n    \t\t<div class="right subpanel scrollable">\n    \t\t</div>\n    \t</div>\n\n    \t// in the view\n    \texport default Ember.View.extend({\n    \t\tdidInsertElement: function(){\n    \t\t\tEmber.Application.make_resizable("#resizable_panel");\n    \t\t}\n    \t});\n    \t*/\n    \tmin_width = min_width || 100;\n    \t\n    \tvar selector = function(parent_selector, child_selector){\n    \t\treturn parent_selector + " > .ember-view > " + child_selector;\n    \t};\n\n    \tvar parent = function(){return Ember.$(parent_id);};\n    \tvar left = function(){return Ember.$(selector(parent_id, ".left"));};\n    \tvar dragger = function(){return Ember.$(selector(parent_id, ".dragger"));};\n    \tvar right = function(){return Ember.$(selector(parent_id, ".right"));};\n\n    \tfunction update_right_panel(){\n    \t\tright().css("left", dragger().position().left + dragger().width());\n    \t\tright().width(parent().width() - left().width() - dragger().width());\n    \t}\n\n    \tfunction update_height(){\n    \t\tvar innerHeight = parent().height();\n\n    \t\tleft().height(innerHeight);\n    \t\tdragger().height(innerHeight);\n    \t\tright().height(innerHeight);\n    \t}\n    \t\n    \tfunction update_on_drag() {\n    \t\t// update the width of the left panel, and resize and move the right\n            left().width(dragger().position().left);\n            update_right_panel();\n        }\n\n    \tupdate_height();\n    \tleft().position({my: "left top", at:"left top", of: parent()});\n    \tleft().width(parent().width()*0.5);\n    \tdragger().position({my: "left top", at:"right top", of: left()});\n    \tupdate_right_panel();\n\n    \tdragger().draggable({\n    \t\taxis: "x",\n    \t\tdrag: update_on_drag\n    \t});\n\n    \tdragger().mouseup(function(){\n    \t\tdragger().position({my: "left top", at:"right top", of: left()});\n    \t\tupdate_right_panel();\n    \t});\n\n    \tvar parent_dragger = parent().siblings().filter(\'.dragger\');\n    \tif(parent_dragger.length === 1){\n    \t\tvar parent_update_on_drag = parent_dragger.draggable("option","drag");\n    \t\tparent_dragger.draggable("option","drag", function(){\n    \t\t\tparent_update_on_drag();\n    \t\t\tupdate_on_drag();\n    \t\t});\n    \t}\n\n    \tEmber.$(window).resize(function(){\n    \t\tupdate_height();\n    \t\tupdate_right_panel();\n    \t});\n    };\n\n    __exports__["default"] = App;\n  });//# sourceURL=fire-ref/app.js');
eval('define("fire-ref/components/jqui-accordion/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-accordion/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiAccordion = __dependency2__["default"];\n\n    __exports__["default"] = jquiAccordion;\n  });//# sourceURL=fire-ref/components/jqui-accordion/component.js');eval('define("fire-ref/components/jqui-autocomplete/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-autocomplete/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiAutocomplete = __dependency2__["default"];\n\n    __exports__["default"] = jquiAutocomplete;\n  });//# sourceURL=fire-ref/components/jqui-autocomplete/component.js');
eval('define("fire-ref/components/jqui-button/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-button/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiButton = __dependency2__["default"];\n\n    __exports__["default"] = jquiButton;\n  });//# sourceURL=fire-ref/components/jqui-button/component.js');eval('define("fire-ref/components/jqui-datepicker/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-datepicker/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiDatepicker = __dependency2__["default"];\n\n    __exports__["default"] = jquiDatepicker;\n  });//# sourceURL=fire-ref/components/jqui-datepicker/component.js');
eval('define("fire-ref/components/jqui-progress-bar/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-progress-bar/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiProgressBar = __dependency2__["default"];\n\n    __exports__["default"] = jquiProgressBar;\n  });//# sourceURL=fire-ref/components/jqui-progress-bar/component.js');eval('define("fire-ref/components/jqui-slider/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-slider/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiSlider = __dependency2__["default"];\n\n    __exports__["default"] = jquiSlider;\n  });//# sourceURL=fire-ref/components/jqui-slider/component.js');
eval('define("fire-ref/components/jqui-spinner/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-spinner/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiSpinner = __dependency2__["default"];\n\n    __exports__["default"] = jquiSpinner;\n  });//# sourceURL=fire-ref/components/jqui-spinner/component.js');eval('define("fire-ref/components/jqui-tabs/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-tabs/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiTabs = __dependency2__["default"];\n\n    __exports__["default"] = jquiTabs;\n  });//# sourceURL=fire-ref/components/jqui-tabs/component.js');
eval("define(\"fire-ref/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.Controller.extend(Ember.TargetActionSupport,{\r\n      currentUser: null,\r\n      loggedin: false,\r\n    \r\n      actions: {\r\n        dropbox_login: function(){\r\n          var controller = this;\r\n          Ember.Application.client.authenticate(function(error, client) {\r\n            if (error) {\r\n              // Replace with a call to your own error-handling code.\r\n              //\r\n              // Don't forget to return from the callback, so you don't execute the code\r\n              // that assumes everything went well.\r\n              return console.log(error);\r\n            }\r\n    \r\n            // Replace with a call to your own application code.\r\n            //\r\n            // The user authorized your app, and everything went well.\r\n            // client is a Dropbox.Client instance that you can use to make API calls.\r\n            controller.set('loggedin', true);\r\n            client.getAccountInfo({},function(err, account){\r\n              if(!err)\r\n              {\r\n                account.id = account.uid;\r\n                controller.set('currentUser', account.id);\r\n              controller.get('store').createRecord('user', account);\r\n              controller.triggerAction({\r\n                action:'scan_files',\r\n                target: controller\r\n              });\r\n              }\r\n            });\r\n          });\r\n        },\r\n        scan_files: function(){\r\n          var controller = this;\r\n          var client = Ember.Application.client;\r\n    \r\n          if(this.get('loggedin'))\r\n          {\r\n            client.readdir(\"/\", function(error, entries, folderStat, fileStats) {\r\n              if (error) {\r\n                return showError(error);  // Something went wrong.\r\n              }\r\n              console.log(folderStat);\r\n              console.log(fileStats);\r\n              console.log(\"Your Dropbox contains \" + entries.join(\", \"));\r\n              \r\n              var items = {};\r\n              // group bibtex with files\r\n              fileStats.forEach(function(file){\r\n                if(file.isFile){\r\n                  var id = file.name.replace(/\\.[^\\.]+$/ig,'').replace(/ /g,\"_\").replace(/[^0-9a-z_]/ig,'');\r\n                  if(file.mimeType === \"text/x-bibtex\"){\r\n                    if(id in items){\r\n                      items[id].bib = file;\r\n                    }else{\r\n                      items[id] = {bib: file, file: null};\r\n                    }\r\n                  }else{\r\n                    if(id in items){\r\n                      items[id].file = file;\r\n                    }else{\r\n                      items[id] = {bib: null, file: file};\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n    \r\n              Object.keys(items).forEach(function(id){\r\n                var store = controller.get('store');\r\n                var prev_item = store.getById('ref', id);\r\n                if(prev_item){\r\n    \r\n                }else{\r\n                  if(items[id].bib){\r\n                    // have bibtex, need to read it and add to the store...\r\n                    client.readFile(items[id].bib.path, function(error, data) {\r\n                      if (error) {\r\n                        return showError(error);  // Something went wrong.\r\n                      }\r\n    \r\n                      var bibtex = bibtexParse.toJSON(data);\r\n                      var new_item = bibtex[0].entryTags;\r\n                      new_item.type = bibtex.entryType;\r\n                      new_item.id = bibtex.citationKey;\r\n                      var item = store.createRecord('ref', new_item);\r\n                      item.save();\r\n                    });\r\n                  }else{\r\n                    var item = store.createRecord('ref', {\r\n                      id: id,\r\n                      title: items[id].file.name,\r\n                      path: items[id].file.path,\r\n                      reviewed: 'false'\r\n                    });\r\n                    item.save();\r\n                  }\r\n                }\r\n              });\r\n            });\r\n          }else{\r\n            console.log('Scan called without authentication');\r\n          }\r\n        }\r\n      }\r\n    });\n  });//# sourceURL=fire-ref/controllers/application.js");
eval("define(\"fire-ref/controllers/ref\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global bibtex */\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n      autoSave: (function() {\n      \tvar model = this.get('model');\n      \tconsole.log('### checking...');\n      \tif(model.get('isDirty'))\n      \t{\n        \treturn Ember.run.debounce(this, this.save, 1000);\n      \t}\n      }).observes('controller.contents'),\n\n      save: function() {\n        var model = this.get('model');\n        model.set('updated',Date.now());\n    \tvar bibtex = model.get('bibtex');\n    \tconsole.log(bibtex);\n    \tEmber.Application.client.writeFile(model.get('path').replace(/\\.[^\\.]+$/ig,'.bib'), bibtex, function(error, stat) {\n    \t  if (error) {\n    \t    return showError(error);  // Something went wrong.\n    \t  }\n    \t  model.save();\n    \t  console.log(\"File saved as revision \" + stat.versionTag);\n    \t});\n      },\n      actions: {\n      \tsave: function(){\n      \t\treturn Ember.run.debounce(this, this.save, 100);\n      \t}\n      }\n    });\n  });//# sourceURL=fire-ref/controllers/ref.js");
eval("define(\"fire-ref/initializers/dropbox\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* global Dropbox, Ember */\r\n    \r\n    __exports__[\"default\"] = {\r\n      name: 'dropbox',\r\n      after: 'store',\r\n    \r\n      initialize: function(/* container, app */) {\r\n        //var controller = container.lookup('controller:application');\r\n    \r\n        var client = Ember.Application.client = new Dropbox.Client({ key: \"dfzpvdfyqakmnfi\" });\r\n        client.authDriver(new Dropbox.AuthDriver.Popup({\r\n          receiverUrl: \"http://localhost:4200/oauth_receiver.html\",\r\n          rememberUser: true\r\n        }));\r\n    \r\n        //alert(client.isAuthenticated());\r\n        //controller.set('loggedin', client.isAuthenticated());\r\n        // app.register('route', 'foo', 'service:foo');\r\n      }\r\n    };\n  });//# sourceURL=fire-ref/initializers/dropbox.js");
eval('define("fire-ref/initializers/export-application-global", \n  ["ember","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var config = __dependency2__["default"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__["default"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=fire-ref/initializers/export-application-global.js');
eval("define(\"fire-ref/models/ref\", \n  [\"ember-data\",\"fire-ref/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /* global Ember, bibtexParse */\n    var DS = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var ref = DS.Model.extend({\n      type: DS.attr(),\n      title: DS.attr(),\n      year: DS.attr(),\n      author: DS.attr(),\n      publisher: DS.attr(),\n      bibtex: function(){\n        return bibtexParse.toBibtex([{\n          citationKey: this.id,\n          entryType: this.getWithDefault('type', 'paper'),\n          entryTags: this.toJSON()\n        }]);\n      }.property('type','title','year','author','publisher','path','reviewed','updated'),\n      path: DS.attr(),\n      reviewed: DS.attr(), // True/False\n      updated: DS.attr(),\n\n      preview: function(){\n        return \"preview.html?path=\" + this.get('path') + \"&access_token=\" + Ember.Application.client._oauth._token;\n      }.property('uri'),\n\n    });\n\n\n\n    __exports__[\"default\"] = ref;\n  });//# sourceURL=fire-ref/models/ref.js");
eval('define("fire-ref/models/user", \n  ["ember-data","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    __exports__["default"] = DS.Model.extend({\n    \tcountryCode: DS.attr(),\n    \temail: DS.attr(),\n    \tname: DS.attr(),\n    \tprivateBytes: DS.attr(),\n    \tpublicAppUrl: DS.attr(),\n    \tquota: DS.attr(),\n    \treferralUrl: DS.attr(),\n    \tsharedBytes: DS.attr(),\n    \tuid: DS.attr(),\n    \tusedQuota: DS.attr()\n    });\n  });//# sourceURL=fire-ref/models/user.js');
eval('define("fire-ref/router", \n  ["ember","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    var config = __dependency2__["default"];\n\n    \r\n    var Router = Ember.Router.extend({\r\n      location: config.locationType\r\n    });\r\n    \r\n    Router.map(function() {\r\n      this.resource(\'refs\', function () {\r\n        this.resource(\'ref\', { path: \'/:ref_id\' });\r\n      });\r\n    \r\n      this.resource(\'user\');\r\n    });\r\n    \r\n    __exports__["default"] = Router;\n  });//# sourceURL=fire-ref/router.js');
eval('define("fire-ref/routes/ref", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    __exports__["default"] = Ember.Route.extend({\n    });\n  });//# sourceURL=fire-ref/routes/ref.js');eval('define("fire-ref/routes/refs", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.Route.extend({\r\n    \tmodel: function(){\r\n    \t\tif(!this.container.lookup(\'controller:application\').get(\'loggedin\'))\r\n    \t\t{\r\n    \t\t\tthis.transitionTo(\'/\');\r\n    \t\t}\r\n    \t\treturn this.store.find(\'ref\');\r\n    \t}\r\n    });\n  });//# sourceURL=fire-ref/routes/refs.js');
eval("define(\"fire-ref/routes/user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    \tmodel: function(){\n    \t\tif(!this.container.lookup('controller:application').get('loggedin'))\n    \t\t{\n    \t\t\tthis.transitionTo('/');\n    \t\t}\n    \t\treturn this.store.find('user', this.container.lookup('controller:application').get('currentUser'));\n    \t}\n    });\n  });//# sourceURL=fire-ref/routes/user.js");
eval('define("fire-ref/serializers/application", \n  ["ember-data","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    __exports__["default"] = DS.LSSerializer.extend({});\n  });//# sourceURL=fire-ref/serializers/application.js');eval('define("fire-ref/templates/application", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push("<span class=\\"glyphicon glyphicon-fire\\"></span> FireRef");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push("\\r\\n          <li>\\r\\n        \t\t");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "refs", options) : helperMissing.call(depth0, "link-to", "refs", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n        \t</li>\\r\\n          <li>");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "user", options) : helperMissing.call(depth0, "link-to", "user", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n          <li><a ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "dropbox_logout", "loggedin", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));\n      data.buffer.push(">Logout</a></li>\\r\\n        ");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push("References");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push("User");\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push("\\r\\n          <li><a ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "dropbox_login", "loggedin", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));\n      data.buffer.push(">Dropbox Login</a></li>\\r\\n        ");\n      return buffer;\n      }\n\n    function program10(depth0,data) {\n      \n      \n      data.buffer.push("\\r\\n  <button id=\\"signin-button\\">Dropbox Login</button>\\r\\n  ");\n      }\n\n      data.buffer.push("<nav class=\\"navbar navbar-default navbar-fixed-top\\" role=\\"navigation\\">\\r\\n  <div class=\\"container-fluid\\">\\r\\n    \x3c!-- Brand and toggle get grouped for better mobile display --\x3e\\r\\n    <div class=\\"navbar-header\\">\\r\\n      <button type=\\"button\\" class=\\"navbar-toggle\\" data-toggle=\\"collapse\\" data-target=\\"#bs-example-navbar-collapse-1\\">\\r\\n        <span class=\\"sr-only\\">Toggle navigation</span>\\r\\n        <span class=\\"icon-bar\\"></span>\\r\\n        <span class=\\"icon-bar\\"></span>\\r\\n        <span class=\\"icon-bar\\"></span>\\r\\n      </button>\\r\\n      ");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': ("navbar-brand")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "index", options) : helperMissing.call(depth0, "link-to", "index", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Collect the nav links, forms, and other content for toggling --\x3e\\r\\n    <div class=\\"collapse navbar-collapse\\" id=\\"bs-example-navbar-collapse-1\\">\\r\\n      <ul class=\\"nav navbar-nav\\">\\r\\n        ");\n      stack1 = helpers[\'if\'].call(depth0, "loggedin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n      </ul>\\r\\n    </div>\x3c!-- /.navbar-collapse --\x3e\\r\\n  </div>\x3c!-- /.container-fluid --\x3e\\r\\n</nav>\\r\\n\\r\\n<div id=\\"content_panel\\">\\r\\n  ");\n      stack1 = helpers.unless.call(depth0, "loggedin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\\r\\n  ");\n      stack1 = helpers._triageMustache.call(depth0, "outlet", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n</div>");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/application.js');
eval('define("fire-ref/templates/index", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push("Welcome to FireRef\\n\\n");\n      \n    });\n  });//# sourceURL=fire-ref/templates/index.js');
eval('define("fire-ref/templates/ref", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push("\\n\t\t\t<div class=\\"form-group\\">\\n\t\t\t\t<button ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "save", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));\n      data.buffer.push(">Save</button>\\n\t\t\t</div>\\n\t\t\t");\n      return buffer;\n      }\n\n      data.buffer.push("<div id=\\"reference_subpanel\\" class=\\"subpanel scrollable left\\">\\n\t<div class=\\"container-fluid\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': ("isDirty")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(">\\n\t\t<div class=\\"row\\">\\n\t\t\t");\n      stack1 = helpers[\'if\'].call(depth0, "isDirty", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\n\t\t\t<div class=\\"form-group\\">\\n\t\t\t    <label for=\\"exampleInputEmail1\\">Title</label>\\n\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("title")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\n\t\t\t</div>\\n\t\t\t<div class=\\"form-group\\">\\n\t\t\t    <label for=\\"exampleInputEmail1\\">Authors</label>\\n\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("author")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\n\t\t\t</div>\\n\t\t\t<div class=\\"form-group\\">\\n\t\t\t    <label for=\\"exampleInputEmail1\\">Year</label>\\n\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("year")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\n\t\t\t</div>\\n\t\t\t<div class=\\"form-group\\">\\n\t\t\t    <label for=\\"exampleInputEmail1\\">Publisher</label>\\n\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("publisher")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\n\t\t\t</div>\\n\t\t\t<div class=\\"form-group\\">\\n\t\t\t    <label for=\\"exampleInputEmail1\\">Url</label>\\n\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("url")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n</div>\\n\\n<div class=\\"dragger\\">\\n</div>\\n\\n<div id=\\"preview_panel\\" class=\\"subpanel scrollable right\\">\\n\t\\n</div>");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/ref.js');
eval('define("fire-ref/templates/refs", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push("\\r\\n\t\t\t\t<tr>\\r\\n\t\t\t\t\t<td>");\n      stack1 = helpers._triageMustache.call(depth0, "author", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</td>\\r\\n\t\t\t\t\t<td>");\n      stack1 = helpers._triageMustache.call(depth0, "year", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</td>\\r\\n\t\t\t\t\t<td>");\n      stack1 = (helper = helpers.linkTo || (depth0 && depth0.linkTo),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "ref", "", options) : helperMissing.call(depth0, "linkTo", "ref", "", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</td>\\r\\n\t\t\t\t</tr>\\r\\n\t\t\t");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push("\\r\\n\t\t\t\t\t\t");\n      stack1 = helpers._triageMustache.call(depth0, "title", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t\t\t");\n      return buffer;\n      }\n\n      data.buffer.push("<div class=\\"left subpanel scrollable\\">\\r\\n\t<div class=\\"container-fluid\\">\\r\\n\t\t<table class=\\"table\\">\\r\\n\t\t\t<thead>\\r\\n\t\t\t\t<tr>\\r\\n\t\t\t\t\t<th>Author(s)</th>\\r\\n\t\t\t\t\t<th>Year</th>\\r\\n\t\t\t\t\t<th>Title</th>\\r\\n\t\t\t\t</tr>\\r\\n\t\t\t</thead>\\r\\n\t\t\t<tbody>\\r\\n\t\t\t");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t</tbody>\\r\\n\t\t</table>\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\"dragger\\">\\r\\n</div>\\r\\n\\r\\n<div id=\\"reference_panel\\" class=\\"right subpanel\\">\\r\\n");\n      stack1 = helpers._triageMustache.call(depth0, "outlet", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n</div>");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/refs.js');
eval('define("fire-ref/templates/user", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, "model", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n<li>uid: ");\n      stack1 = helpers._triageMustache.call(depth0, "uid", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>countryCode: ");\n      stack1 = helpers._triageMustache.call(depth0, "countryCode", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>email: ");\n      stack1 = helpers._triageMustache.call(depth0, "email", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>name: ");\n      stack1 = helpers._triageMustache.call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>privateBytes: ");\n      stack1 = helpers._triageMustache.call(depth0, "privateBytes", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>publicAppUrl: ");\n      stack1 = helpers._triageMustache.call(depth0, "publicAppUrl", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>quota: ");\n      stack1 = helpers._triageMustache.call(depth0, "quota", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>referralUrl: ");\n      stack1 = helpers._triageMustache.call(depth0, "referralUrl", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>sharedBytes: ");\n      stack1 = helpers._triageMustache.call(depth0, "sharedBytes", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n<li>usedQuota: ");\n      stack1 = helpers._triageMustache.call(depth0, "usedQuota", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/user.js');
eval("define(\"fire-ref/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - adapters');\n    test('adapters/application.js should pass jshint', function() { \n      ok(true, 'adapters/application.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/adapters/application.jshint.js");eval("define(\"fire-ref/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('app.js should pass jshint', function() { \n      ok(true, 'app.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/app.jshint.js");
eval("define(\"fire-ref/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/application.js should pass jshint', function() { \n      ok(false, 'controllers/application.js should pass jshint.\\ncontrollers/application.js: line 46, col 20, \\'showError\\' is not defined.\\ncontrollers/application.js: line 83, col 28, \\'showError\\' is not defined.\\ncontrollers/application.js: line 86, col 32, \\'bibtexParse\\' is not defined.\\n\\n3 errors'); \n    });\n  });//# sourceURL=fire-ref/tests/controllers/application.jshint.js");
eval("define(\"fire-ref/tests/controllers/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/ref.js should pass jshint', function() { \n      ok(false, 'controllers/ref.js should pass jshint.\\ncontrollers/ref.js: line 21, col 16, \\'showError\\' is not defined.\\ncontrollers/ref.js: line 1, col 1, \\'bibtex\\' is defined but never used.\\n\\n2 errors'); \n    });\n  });//# sourceURL=fire-ref/tests/controllers/ref.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/helpers');\n    test('fire-ref/tests/helpers/resolver.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/helpers/resolver.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/helpers/resolver.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/helpers');\n    test('fire-ref/tests/helpers/start-app.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/helpers/start-app.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/helpers/start-app.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests');\n    test('fire-ref/tests/test-helper.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/test-helper.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/test-helper.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/controllers');\n    test('fire-ref/tests/unit/controllers/application-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/controllers/application-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/controllers/application-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/controllers/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/controllers');\n    test('fire-ref/tests/unit/controllers/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/controllers/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/controllers/ref-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/models/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/models');\n    test('fire-ref/tests/unit/models/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/models/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/models/ref-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/models/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/models');\n    test('fire-ref/tests/unit/models/user-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/models/user-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/models/user-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/routes/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/routes');\n    test('fire-ref/tests/unit/routes/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/routes/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/routes/ref-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/routes/refs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/routes');\n    test('fire-ref/tests/unit/routes/refs-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/routes/refs-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/routes/refs-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/routes/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/routes');\n    test('fire-ref/tests/unit/routes/user-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/routes/user-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/routes/user-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/serializers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/serializers');\n    test('fire-ref/tests/unit/serializers/application-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/serializers/application-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/serializers/application-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/views/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/views');\n    test('fire-ref/tests/unit/views/application-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/views/application-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/views/application-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/views/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/views');\n    test('fire-ref/tests/unit/views/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/views/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/views/ref-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/views/refs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/views');\n    test('fire-ref/tests/unit/views/refs-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/views/refs-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/views/refs-test.jshint.js");eval('define("fire-ref/tests/helpers/resolver", \n  ["ember/resolver","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Resolver = __dependency1__["default"];\n    var config = __dependency2__["default"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__["default"] = resolver;\n  });//# sourceURL=fire-ref/tests/helpers/resolver.js');
eval('define("fire-ref/tests/helpers/start-app", \n  ["ember","fire-ref/app","fire-ref/router","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var Application = __dependency2__["default"];\n    var Router = __dependency3__["default"];\n    var config = __dependency4__["default"];\n\n    __exports__["default"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to "start an app at a specific URL"\n\n      return App;\n    }\n  });//# sourceURL=fire-ref/tests/helpers/start-app.js');
eval("define(\"fire-ref/tests/initializers/dropbox.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - initializers');\n    test('initializers/dropbox.js should pass jshint', function() { \n      ok(true, 'initializers/dropbox.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/initializers/dropbox.jshint.js");eval("define(\"fire-ref/tests/models/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/ref.js should pass jshint', function() { \n      ok(false, 'models/ref.js should pass jshint.\\nmodels/ref.js: line 3, col 8, \\'config\\' is defined but never used.\\n\\n1 error'); \n    });\n  });//# sourceURL=fire-ref/tests/models/ref.jshint.js");
eval("define(\"fire-ref/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/user.js should pass jshint', function() { \n      ok(true, 'models/user.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/models/user.jshint.js");eval("define(\"fire-ref/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('router.js should pass jshint', function() { \n      ok(true, 'router.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/router.jshint.js");
eval("define(\"fire-ref/tests/routes/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/ref.js should pass jshint', function() { \n      ok(true, 'routes/ref.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/routes/ref.jshint.js");eval("define(\"fire-ref/tests/routes/refs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/refs.js should pass jshint', function() { \n      ok(true, 'routes/refs.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/routes/refs.jshint.js");
eval("define(\"fire-ref/tests/routes/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/user.js should pass jshint', function() { \n      ok(true, 'routes/user.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/routes/user.jshint.js");eval("define(\"fire-ref/tests/serializers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - serializers');\n    test('serializers/application.js should pass jshint', function() { \n      ok(true, 'serializers/application.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/serializers/application.jshint.js");
eval('define("fire-ref/tests/test-helper", \n  ["fire-ref/tests/helpers/resolver","ember-qunit"],\n  function(__dependency1__, __dependency2__) {\n    "use strict";\n    var resolver = __dependency1__["default"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id="ember-testing-container"><div id="ember-testing"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=fire-ref/tests/test-helper.js');
eval("define(\"fire-ref/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor('controller:application', 'ApplicationController', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=fire-ref/tests/unit/controllers/application-test.js");
eval("define(\"fire-ref/tests/unit/controllers/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('controller:ref', 'RefController', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=fire-ref/tests/unit/controllers/ref-test.js");
eval("define(\"fire-ref/tests/unit/models/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel('ref', 'Ref', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test('it exists', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=fire-ref/tests/unit/models/ref-test.js");
eval("define(\"fire-ref/tests/unit/models/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n\n    moduleForModel('user', 'User', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test('it exists', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(model);\n    });\n  });//# sourceURL=fire-ref/tests/unit/models/user-test.js");
eval("define(\"fire-ref/tests/unit/routes/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:ref', 'RefRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=fire-ref/tests/unit/routes/ref-test.js");
eval("define(\"fire-ref/tests/unit/routes/refs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:refs', 'RefsRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=fire-ref/tests/unit/routes/refs-test.js");
eval("define(\"fire-ref/tests/unit/routes/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor('route:user', 'UserRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=fire-ref/tests/unit/routes/user-test.js");
eval("define(\"fire-ref/tests/unit/serializers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('serializer:application', 'ApplicationSerializer', {\n      // Specify the other units that are required for this test.\n      // needs: ['serializer:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var serializer = this.subject();\n      ok(serializer);\n    });\n  });//# sourceURL=fire-ref/tests/unit/serializers/application-test.js");
eval("define(\"fire-ref/tests/unit/views/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('view:application', 'ApplicationView');\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var view = this.subject();\n      ok(view);\n    });\n  });//# sourceURL=fire-ref/tests/unit/views/application-test.js");eval("define(\"fire-ref/tests/unit/views/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('view:ref', 'RefView');\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var view = this.subject();\n      ok(view);\n    });\n  });//# sourceURL=fire-ref/tests/unit/views/ref-test.js");
eval("define(\"fire-ref/tests/unit/views/refs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('view:refs', 'RefsView');\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var view = this.subject();\n      ok(view);\n    });\n  });//# sourceURL=fire-ref/tests/unit/views/refs-test.js");eval("define(\"fire-ref/tests/views/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/application.js should pass jshint', function() { \n      ok(false, 'views/application.js should pass jshint.\\nviews/application.js: line 5, col 28, Missing semicolon.\\nviews/application.js: line 10, col 11, Missing semicolon.\\n\\n2 errors'); \n    });\n  });//# sourceURL=fire-ref/tests/views/application.jshint.js");
eval("define(\"fire-ref/tests/views/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/ref.js should pass jshint', function() { \n      ok(true, 'views/ref.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/views/ref.jshint.js");eval("define(\"fire-ref/tests/views/refs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/refs.js should pass jshint', function() { \n      ok(true, 'views/refs.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/views/refs.jshint.js");
eval('define("fire-ref/views/application", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    __exports__["default"] = Ember.View.extend({\n    \tdidInsertElement: function(){\n    \t\tconsole.log("here")\n    \t\tEmber.$(\'#content_panel\').position({my: "left top", at:"left bottom", of: Ember.$(".navbar")});\n    \t\tEmber.$(\'#content_panel\').height(window.innerHeight - Ember.$(".navbar").height() - 1);\n    \t\tEmber.$(window).resize(function(){\n    \t\t\tEmber.$(\'#content_panel\').height(window.innerHeight - Ember.$(".navbar").height() - 1);\n    \t\t})\n    \t}\n    });\n  });//# sourceURL=fire-ref/views/application.js');
eval('define("fire-ref/views/ref", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    __exports__["default"] = Ember.View.extend({\n    \tdidInsertElement: function(){\n    \t\tEmber.Application.make_resizable("#reference_panel");\n    \t}\n    });\n  });//# sourceURL=fire-ref/views/ref.js');eval('define("fire-ref/views/refs", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    __exports__["default"] = Ember.View.extend({\n    \tdidInsertElement: function(){\n    \t\tEmber.Application.make_resizable("#content_panel");\n    \t}\n\n    });\n  });//# sourceURL=fire-ref/views/refs.js');
define("fire-ref/config/environment",["ember"],function(b){try{var a="fire-ref/config/environment",c=b["default"].$('meta[name="'+a+'"]').attr("content");return{"default":JSON.parse(unescape(c))}}catch(d){throw Error('Could not read config from meta tag with name "'+a+'".');}});runningTests?require("fire-ref/tests/test-helper"):require("fire-ref/app")["default"].create({});
