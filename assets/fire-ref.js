eval("//# sourceURL=vendor/ember-cli/loader.js");eval('define("fire-ref/adapters/application", \n  ["ember-data","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    var config = __dependency2__["default"];\n\n    \r\n    //export default DS.RESTAdapter.extend({\r\n    //});\r\n    \r\n    __exports__["default"] = DS.LSAdapter.extend({\r\n        namespace: config.APP.LOCALSTORAGE_NS\r\n    });\r\n    \r\n    // export default DS.Adapter.extend({\r\n    //   find: function(store, type, id) {\r\n    //     var client = Ember.Application.client;\r\n    \r\n    //     if(type.contains(\':user:\')){\r\n    //       return client.getAccountInfo({},function(error, account){\r\n    //           var dets = account.json();\r\n    //           dets.id = account.uid;\r\n    //           store.load(type, account.uid, dets);\r\n    //           return dets;\r\n    //         })\r\n    //     }\r\n    //   },\r\n    //   findAll:  function(store, type) {\r\n    //     var client = Ember.Application.client;\r\n    //     if(type.toString().indexOf(\':user:\')>=0){\r\n    //       return client.getAccountInfo({},function(error, account){\r\n    //           console.log(account.uid);\r\n    //           return [account];\r\n    //         });\r\n    //     }\r\n    //   }\r\n    // });\n  });//# sourceURL=fire-ref/adapters/application.js');
eval('define("fire-ref/app", \n  ["ember","ember/resolver","ember/load-initializers","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    var Resolver = __dependency2__["default"];\n\n    var loadInitializers = __dependency3__["default"];\n\n    var config = __dependency4__["default"];\n\n    \r\n    Ember.MODEL_FACTORY_INJECTIONS = true;\r\n    \r\n    var App = Ember.Application.extend({\r\n      modulePrefix: config.modulePrefix,\r\n      podModulePrefix: config.podModulePrefix,\r\n      Resolver: Resolver\r\n    });\r\n    \r\n    loadInitializers(App, config.modulePrefix);\r\n    \r\n    if (config.APP.FORCE_SSL && window.location.protocol !== "https:"){\r\n        window.location.href = "https:" + window.location.href.substring(window.location.protocol.length);\r\n    }\r\n    \r\n    Ember.Application.make_resizable = function(parent_id, min_width){\r\n    \t/**\r\n    \t// in the template\r\n    \t<div id="resizable_panel">\r\n    \t\t<div class="left subpanel scrollable">\r\n    \t\t</div>\r\n    \r\n    \t\t<div class="dragger">\r\n    \t\t</div>\r\n    \r\n    \t\t<div class="right subpanel scrollable">\r\n    \t\t</div>\r\n    \t</div>\r\n    \r\n    \t// in the view\r\n    \texport default Ember.View.extend({\r\n    \t\tdidInsertElement: function(){\r\n    \t\t\tEmber.Application.make_resizable("#resizable_panel");\r\n    \t\t}\r\n    \t});\r\n    \t*/\r\n    \tmin_width = min_width || 100;\r\n    \t\r\n    \tvar selector = function(parent_selector, child_selector){\r\n    \t\treturn parent_selector + " > .ember-view > " + child_selector;\r\n    \t};\r\n    \r\n    \tvar parent = function(){return Ember.$(parent_id);};\r\n    \tvar left = function(){return Ember.$(selector(parent_id, ".left"));};\r\n    \tvar dragger = function(){return Ember.$(selector(parent_id, ".dragger"));};\r\n    \tvar right = function(){return Ember.$(selector(parent_id, ".right"));};\r\n    \tvar labels = function(){return Ember.$("#labels");};\r\n    \tfunction update_right_panel(){\r\n    \t\tright().css("left", dragger().position().left + dragger().width());\r\n    \t\tright().width(parent().width() - left().width() - dragger().width() - labels().width());\r\n    \t}\r\n    \r\n    \tfunction update_height(){\r\n    \t\tvar innerHeight = parent().height();\r\n    \r\n    \t\tleft().height(innerHeight);\r\n    \t\tdragger().height(innerHeight);\r\n    \t\tright().height(innerHeight);\r\n    \t}\r\n    \t\r\n    \tfunction update_on_drag() {\r\n    \t\t// update the width of the left panel, and resize and move the right\r\n            left().width(dragger().position().left - labels().width());\r\n            update_right_panel();\r\n        }\r\n    \r\n    \tupdate_height();\r\n    \tleft().position({my: "left top", at:"right top", of: labels()});\r\n    \tleft().width(parent().width()*0.5);\r\n    \tdragger().position({my: "left top", at:"right top", of: left()});\r\n    \tupdate_right_panel();\r\n    \r\n    \tdragger().draggable({\r\n    \t\taxis: "x",\r\n    \t\tdrag: update_on_drag\r\n    \t});\r\n    \r\n    \tdragger().mouseup(function(){\r\n    \t\tdragger().position({my: "left top", at:"right top", of: left()});\r\n    \t\tupdate_right_panel();\r\n    \t});\r\n    \r\n    \tvar parent_dragger = parent().siblings().filter(\'.dragger\');\r\n    \tif(parent_dragger.length === 1){\r\n    \t\tvar parent_update_on_drag = parent_dragger.draggable("option","drag");\r\n    \t\tparent_dragger.draggable("option","drag", function(){\r\n    \t\t\tparent_update_on_drag();\r\n    \t\t\tupdate_on_drag();\r\n    \t\t});\r\n    \t}\r\n    \r\n    \tEmber.$(window).resize(function(){\r\n    \t\tupdate_height();\r\n    \t\tupdate_right_panel();\r\n    \t});\r\n    };\r\n    \r\n    __exports__["default"] = App;\n  });//# sourceURL=fire-ref/app.js');
eval('define("fire-ref/components/jqui-accordion/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-accordion/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiAccordion = __dependency2__["default"];\n\n    __exports__["default"] = jquiAccordion;\n  });//# sourceURL=fire-ref/components/jqui-accordion/component.js');eval('define("fire-ref/components/jqui-autocomplete/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-autocomplete/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiAutocomplete = __dependency2__["default"];\n\n    __exports__["default"] = jquiAutocomplete;\n  });//# sourceURL=fire-ref/components/jqui-autocomplete/component.js');
eval('define("fire-ref/components/jqui-button/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-button/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiButton = __dependency2__["default"];\n\n    __exports__["default"] = jquiButton;\n  });//# sourceURL=fire-ref/components/jqui-button/component.js');eval('define("fire-ref/components/jqui-datepicker/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-datepicker/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiDatepicker = __dependency2__["default"];\n\n    __exports__["default"] = jquiDatepicker;\n  });//# sourceURL=fire-ref/components/jqui-datepicker/component.js');
eval('define("fire-ref/components/jqui-progress-bar/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-progress-bar/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiProgressBar = __dependency2__["default"];\n\n    __exports__["default"] = jquiProgressBar;\n  });//# sourceURL=fire-ref/components/jqui-progress-bar/component.js');eval('define("fire-ref/components/jqui-slider/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-slider/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiSlider = __dependency2__["default"];\n\n    __exports__["default"] = jquiSlider;\n  });//# sourceURL=fire-ref/components/jqui-slider/component.js');
eval('define("fire-ref/components/jqui-spinner/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-spinner/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiSpinner = __dependency2__["default"];\n\n    __exports__["default"] = jquiSpinner;\n  });//# sourceURL=fire-ref/components/jqui-spinner/component.js');eval('define("fire-ref/components/jqui-tabs/component", \n  ["ember","ember-cli-jquery-ui/components/jqui-tabs/component","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var jquiTabs = __dependency2__["default"];\n\n    __exports__["default"] = jquiTabs;\n  });//# sourceURL=fire-ref/components/jqui-tabs/component.js');
eval("define(\"fire-ref/components/label-filter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.Component.extend({\r\n    \tisCurrent: function(){\r\n    \t\treturn this.get('filter') === this.get('current').get('controller').get('filter');\r\n    \t}.property('filter','current.controller.filter'),\r\n    \tclick: function() {\r\n        \tthis.sendAction('action', this.get('filter'));\r\n      \t}\r\n    });\n  });//# sourceURL=fire-ref/components/label-filter.js");
eval("define(\"fire-ref/controllers/application\", \n  [\"ember\",\"fire-ref/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /* global bibtexParse */\r\n    var Ember = __dependency1__[\"default\"];\n\n    var config = __dependency2__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.Controller.extend(Ember.TargetActionSupport,{\r\n      version: config.APP.VERSION,\r\n      currentUser: null,\r\n      loggedin: false,\r\n    \r\n      userName: function(){\r\n        var id = this.get('currentUser');\r\n        var user = this.get('store').getById('user', id);\r\n        if(user){\r\n          return user.get('name');\r\n        }\r\n      }.property('currentUser'),\r\n    \r\n      actions: {\r\n        clearLocalStorage: function(){\r\n          localStorage.removeItem(config.APP.LOCALSTORAGE_NS);\r\n          window.location.href = config.baseURL;\r\n        },\r\n        trySilentDropboxLogin: function(){\r\n          var controller = this;\r\n          Ember.Application.client.authenticate({interactive: false}, function(error, client) {\r\n            if (error) {\r\n              return console.log(error);\r\n            }\r\n            if (client.isAuthenticated()) {\r\n              // Cached credentials are available, make Dropbox API calls.\r\n              controller.triggerAction({\r\n                action:'onAfterAuthenticate',\r\n                target: controller\r\n              });\r\n            } else {\r\n              // not preauthed, do nothing\r\n            }\r\n          });\r\n        },\r\n        doDropboxLogin: function(){\r\n          var controller = this;\r\n          Ember.Application.client.authenticate(function(error/*, client*/) {\r\n            if (error) {\r\n              // Replace with a call to your own error-handling code.\r\n              //\r\n              // Don't forget to return from the callback, so you don't execute the code\r\n              // that assumes everything went well.\r\n              return console.log(error);\r\n            }\r\n    \r\n            // Replace with a call to your own application code.\r\n            //\r\n            // The user authorized your app, and everything went well.\r\n            // client is a Dropbox.Client instance that you can use to make API calls.\r\n            controller.triggerAction({\r\n              action:'onAfterAuthenticate',\r\n              target: controller\r\n            });\r\n          });\r\n        },\r\n        doDropboxLogout: function(){\r\n          var controller = this;\r\n          Ember.Application.client.signOut();\r\n          controller.set('loggedin', false);\r\n          localStorage.removeItem(config.APP.LOCALSTORAGE_NS);\r\n          controller.transitionTo('index');\r\n        },\r\n        onAfterAuthenticate: function(){\r\n          var controller = this;\r\n          controller.set('loggedin', true);\r\n          Ember.Application.client.getAccountInfo({},function(err, account){\r\n              if(!err)\r\n              {\r\n                account.id = account.uid;\r\n                controller.get('store').createRecord('user', account);\r\n                controller.set('currentUser', account.id);\r\n                controller.triggerAction({\r\n                  action:'scan_files',\r\n                  target: controller\r\n                });\r\n                controller.transitionTo('refs');\r\n              }\r\n            });\r\n        },\r\n        scan_files: function(){\r\n          var controller = this;\r\n          var client = Ember.Application.client;\r\n    \r\n          if(this.get('loggedin'))\r\n          {\r\n            client.readdir(\"/\", function(error, entries, folderStat, fileStats) {\r\n              if (error) {\r\n                return showError(error);  // Something went wrong.\r\n              }\r\n              console.log(folderStat);\r\n              console.log(fileStats[0]);\r\n              \r\n              var items = {};\r\n              // group bibtex with files\r\n              fileStats.forEach(function(file){\r\n                if(file.isFile){\r\n                  var id = file.name.replace(/\\.[^\\.]+$/ig,'').replace(/ /g,\"_\").replace(/[^0-9a-z_]/ig,'');\r\n                  if(file.mimeType === \"text/x-bibtex\"){\r\n                    if(id in items){\r\n                      items[id].bib = file;\r\n                    }else{\r\n                      items[id] = {bib: file, file: null};\r\n                    }\r\n                  }else{\r\n                    if(id in items){\r\n                      items[id].file = file;\r\n                    }else{\r\n                      items[id] = {bib: null, file: file};\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n    \r\n              Object.keys(items).forEach(function(id){\r\n                var store = controller.get('store');\r\n                var prev_item = store.getById('ref', id);\r\n                if(prev_item){\r\n    \r\n                }else{\r\n                  if(items[id].bib){\r\n                    // have bibtex, need to read it and add to the store...\r\n                    client.readFile(items[id].bib.path, function(error, data) {\r\n                      if (error) {\r\n                        return showError(error);  // Something went wrong.\r\n                      }\r\n                      var bibtex = bibtexParse.toJSON(data);\r\n                      \r\n                      var item = store.createRecord('ref', {id: bibtex[0].citationKey});\r\n    \r\n                      item.set('bibtex', data);\r\n                      item.save();\r\n                    });\r\n                  }else{\r\n    \r\n                    var entrytype = store.getById('entrytype', \"article\");\r\n                    var title = items[id].file.name.replace(/\\.[^\\.]+$/ig,'');\r\n                    var match = /^([0-9]+).\\s*/.exec(title);\r\n                    var year;\r\n                    if(match){\r\n                      year = match[1];\r\n                      title = title.replace(/^([0-9]+).\\s*/,'');\r\n                    }\r\n                    var item = store.createRecord('ref', {\r\n                      id: id,\r\n                      type: entrytype,\r\n                      title: title,\r\n                      year: year,\r\n                      path: items[id].file.path,\r\n                      reviewed: 'false'\r\n                    });\r\n                    store.find('entrytype', \"article\").then(function(entrytype){\r\n                      item.set('type', entrytype);\r\n                      item.save();\r\n                    });\r\n                  }\r\n                }\r\n              });\r\n            });\r\n          }else{\r\n            console.log('Scan called without authentication');\r\n          }\r\n        }\r\n      }\r\n    });\n  });//# sourceURL=fire-ref/controllers/application.js");
eval('define("fire-ref/controllers/entrytypes", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.ArrayController.extend({\r\n    });\n  });//# sourceURL=fire-ref/controllers/entrytypes.js');eval("define(\"fire-ref/controllers/ref\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.ObjectController.extend({\r\n      // autoSave: (function() {\r\n      // \tvar model = this.get('model');\r\n      // \tconsole.log('### checking...');\r\n      // \tif(model.get('isDirty'))\r\n      // \t{\r\n      //   \treturn Ember.run.debounce(this, this.save, 1000);\r\n      // \t}\r\n      // }).observes('controller.contents'),\r\n    \r\n      entrytypes: function() {\r\n        return this.store.all('entrytype');\r\n      }.property(),\r\n    \r\n      lastIdOnTypeChange: null,\r\n      watchEntryTypeId: function(){\r\n        console.log('changed');\r\n        if(this.get('lastIdOnTypeChange') !== this.get('model').id){\r\n          this.set('lastIdOnTypeChange', this.get('model').id);\r\n        }else{\r\n          return this.save();\r\n        }\r\n      }.observes('type'),\r\n    \r\n      save: function() {\r\n        var model = this.get('model');\r\n        model.set('updated',Date.now());\r\n      \tvar bibtex = model.get('bibtex');\r\n      \tconsole.log(bibtex);\r\n      \tEmber.Application.client.writeFile(model.get('path').replace(/\\.[^\\.]+$/ig,'.bib'), bibtex, function(error, stat) {\r\n      \t  if (error) {\r\n      \t    return showError(error);  // Something went wrong.\r\n      \t  }\r\n      \t  model.save();\r\n      \t  console.log(\"File saved as revision \" + stat.versionTag);\r\n      \t});\r\n      },\r\n    \r\n      actions: {\r\n      \tsave: function(){\r\n      \t\treturn Ember.run.debounce(this, this.save, 100);\r\n      \t},\r\n        cancel: function(){\r\n          this.get('model').rollback();\r\n        },\r\n        preview: function(){\r\n          Ember.$( \"#preview_dialog iframe\" ).attr(\"src\", this.get('model').get(\"preview\"));\r\n          Ember.$( \"#preview_dialog\" ).dialog(\"open\");\r\n        }\r\n      }\r\n    });\n  });//# sourceURL=fire-ref/controllers/ref.js");
eval("define(\"fire-ref/controllers/refs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.ArrayController.extend({\r\n      filter: '*', // set default to all\r\n      sortProperties: ['year'],\r\n        sortAscending: true,\r\n      //allLabels: Ember.computed.mapBy('refs', 'label'),\r\n      //labels: Ember.computed.uniq('allLabels'),\r\n    \r\n      labels: function() {\r\n        var model = this.get('model');\r\n        if(!model || model.content.length === 0)\r\n        {\r\n          return [];\r\n        }\r\n        return model.reduce(function(prev,next){\r\n          var glom = prev;\r\n          if(Object.prototype.toString.call( prev ) !== '[object Array]')\r\n          {\r\n            if(prev === undefined)\r\n            {\r\n              return [];\r\n            }else{\r\n              var prev_label = prev.get('label');\r\n              if(typeof prev_label === 'string' && prev_label !== '')\r\n              {\r\n                glom = prev_label.trim().split(/\\s*,\\s*/g);\r\n              }else{\r\n                glom = [];\r\n              }\r\n            }\r\n          }\r\n          var next_label = next.get('label');\r\n          if(typeof next_label === 'string' && next_label !== ''){\r\n            glom = glom.concat(next_label.trim().split(/\\s*,\\s*/g));\r\n          }\r\n          return glom;\r\n        }).filter(function(label, index, arr){\r\n          return arr.indexOf(label) === index && label !== undefined && label !== ''; // throw away any instances which are not first\r\n        }).sort();\r\n      }.property('@each.isDirty'),\r\n    \r\n      filteredContent: function(){\r\n          var filter = this.get('filter');\r\n          var refs = this.get('arrangedContent');\r\n          if(filter === '*'){\r\n            // all\r\n            return refs;\r\n          }else if(filter === undefined || filter === null || filter === ''){\r\n            // unsorted\r\n            return refs.filter(function(ref) {\r\n              return ref.get('label') === undefined || ref.get('label') === null || ref.get('label') === '';//.match(rx);\r\n            });\r\n          }else{\r\n            // sorted\r\n            var rx = new RegExp(\"^\"+filter+\"$\", 'gi'); // should not be partial, case-insensitive\r\n            return refs.filter(function(ref) {\r\n              var hasMatch = false;\r\n              var labels = ref.get('label');\r\n              if(labels !== undefined && labels !== ''){\r\n                labels.split(/\\s*,\\s*/).forEach(function(label){\r\n                  if(label.trim().match(rx)){\r\n                    hasMatch = true;\r\n                  }\r\n                });\r\n              }\r\n              return hasMatch;\r\n            });\r\n          }\r\n        }.property('arrangedContent', 'filter', '@each.isDirty'),\r\n    \r\n        sortedByTitle: function(){return this.get('sortProperties').indexOf('title') !== -1;}.property('sortProperties'),\r\n        sortedByAuthor: function(){return this.get('sortProperties').indexOf('author') !== -1;}.property('sortProperties'),\r\n        sortedByYear: function(){return this.get('sortProperties').indexOf('year') !== -1;}.property('sortProperties'),\r\n        actions: {\r\n          filter: function(filter){\r\n            this.set('filter', filter);\r\n          },\r\n          sort: function(column){\r\n            if(this.get('sortProperties').indexOf(column) !== -1){\r\n            this.set('sortAscending', this.get('sortAscending') ^ true);\r\n            }else{\r\n              this.set('sortProperties', [column]);\r\n            }\r\n          }\r\n        }\r\n    });\n  });//# sourceURL=fire-ref/controllers/refs.js");
eval('define("fire-ref/initializers/bibtex", \n  ["exports"],\n  function(__exports__) {\n    "use strict";\n    function initialize(/* container, application */) {\r\n      // application.inject(\'route\', \'foo\', \'service:foo\');\r\n    }\r\n    __exports__.initialize = initialize;\r\n    __exports__["default"] = {\r\n      name: \'bibtex\',\r\n      after: \'store\',\r\n    \r\n      initialize: function(container){\r\n        var types = [\r\n          {\r\n            id: "article",\r\n            description: "An article from a journal or magazine.",\r\n            required: ["author", "title", "journal", "year"],\r\n            optional: ["volume", "number", "pages", "month", "note", "key"]\r\n          },\r\n          {\r\n            id: "book",\r\n            description: "A book with an explicit publisher.",\r\n            required: ["author", "editor", "title", "publisher", "year"],\r\n            optional: ["volume", "number", "series", "address", "edition", "month", "note", "key"]\r\n          },\r\n          {\r\n            id: "booklet",\r\n            description: "A work that is printed and bound, but without a named publisher or sponsoring institution.",\r\n            required: ["title"],\r\n            optional: ["author", "howpublished", "address", "month", "year", "note", "key"]\r\n          },\r\n          {\r\n            id: "conference",\r\n            description: "The same as inproceedings, included for Scribe compatibility.",\r\n            required: ["author", "title", "booktitle", "year"],\r\n            optional: ["editor", "volume", "number", "series", "pages", "address", "month", "organization", "publisher", "note", "key"]\r\n          },\r\n          {\r\n            id: "inbook",\r\n            description: "A part of a book, usually untitled. May be a chapter (or section, etc.) and/or a range of pages.",\r\n            required: ["author", "editor", "title", "chapter", "pages", "publisher", "year"],\r\n            optional: ["volume", "number", "series", "type", "address", "edition", "month", "note", "key"]\r\n          },\r\n          {\r\n            id: "incollection",\r\n            description: "A part of a book having its own title.",\r\n            required: ["author", "title", "booktitle", "publisher", "year"],\r\n            optional: ["editor", "volume", "number", "series", "type", "chapter", "pages", "address", "edition", "month", "note", "key"]\r\n          },\r\n          {\r\n            id: "inproceedings",\r\n            description: "An article in a conference proceedings.",\r\n            required: ["author", "title", "booktitle", "year"],\r\n            optional: ["editor", "volume", "number", "series", "pages", "address", "month", "organization", "publisher", "note", "key"]\r\n          },\r\n          {\r\n            id: "manual",\r\n            description: "Technical documentation.",\r\n            required: ["title"],\r\n            optional: ["author", "organization", "address", "edition", "month", "year", "note", "key"]\r\n          },\r\n          {\r\n            id: "mastersthesis",\r\n            description: "A Master\'s thesis.",\r\n            required: ["author", "title", "school", "year"],\r\n            optional: ["type", "address", "month", "note", "key"]\r\n          },\r\n          {\r\n            id: "misc",\r\n            description: "For use when nothing else fits.",\r\n            required: ["none"],\r\n            optional: ["author", "title", "howpublished", "month", "year", "note", "key"]\r\n          },\r\n          {\r\n            id: "phdthesis",\r\n            description: "A Ph.D. thesis.",\r\n            required: ["author", "title", "school", "year"],\r\n            optional: ["type", "address", "month", "note", "key"]\r\n          },\r\n          {\r\n            id: "proceedings",\r\n            description: "The proceedings of a conference.",\r\n            required: ["title", "year"],\r\n            optional: ["editor", "volume", "number", "series", "address", "month", "publisher", "organization", "note", "key"]\r\n          },\r\n          {\r\n            id: "techreport",\r\n            description: "A report published by a school or other institution, usually numbered within a series.",\r\n            required: ["author", "title", "institution", "year"],\r\n            optional: ["type", "number", "address", "month", "note", "key"]\r\n          },\r\n          {\r\n            id: "unpublished",\r\n            description: "A document having an author and title, but not formally published.",\r\n            required: ["author", "title", "note"],\r\n            optional: ["month", "year", "key"]\r\n          },\r\n        ];\r\n    \r\n        var store = container.lookup(\'store:main\');\r\n    \r\n        types.forEach(function(entrytype){\r\n          // store.find(\'entrytype\', entrytype.id).then(function(record){\r\n          //   record.set(\'description\',entrytype.description);\r\n          //   record.save();\r\n          // })\r\n          if(!store.getById(\'entrytype\', entrytype.id)){\r\n            var item = store.createRecord(\'entrytype\', {id: entrytype.id, description: entrytype.description});\r\n            // save fields\r\n            var requiredArray = item.get(\'required\');\r\n            entrytype.required.forEach(function(required){\r\n              var record = store.getById(\'field\', required);\r\n              if(!record){\r\n                record = store.createRecord(\'field\', {id: required});\r\n              }\r\n              requiredArray.pushObject(record);\r\n            });\r\n            var optionalArray = item.get(\'required\');\r\n            entrytype.optional.forEach(function(optional){\r\n              var record = store.getById(\'field\', optional);\r\n              if(!record){\r\n                record = store.createRecord(\'field\', {id: optional});\r\n              }\r\n              optionalArray.pushObject(record);\r\n            });\r\n    \r\n            \r\n            item.save();\r\n          }\r\n        });\r\n      }\r\n    };\n  });//# sourceURL=fire-ref/initializers/bibtex.js');
eval('define("fire-ref/initializers/dropbox", \n  ["fire-ref/config/environment","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    /* global Dropbox, Ember */\r\n    var config = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = {\r\n      name: \'dropbox\',\r\n      after: \'store\',\r\n    \r\n      initialize: function(/* container, app */) {\r\n        //var controller = container.lookup(\'controller:application\');\r\n    \r\n        var client = Ember.Application.client = new Dropbox.Client({ key: "dfzpvdfyqakmnfi" });\r\n        client.authDriver(new Dropbox.AuthDriver.Popup({\r\n          receiverUrl: config.APP.dropboxRecieverUrl + "oauth_receiver.html",\r\n          rememberUser: true\r\n        }));\r\n    \r\n        //alert(client.isAuthenticated());\r\n        //controller.set(\'loggedin\', client.isAuthenticated());\r\n        // app.register(\'route\', \'foo\', \'service:foo\');\r\n      }\r\n    };\n  });//# sourceURL=fire-ref/initializers/dropbox.js');
eval('define("fire-ref/initializers/export-application-global", \n  ["ember","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    var config = __dependency2__["default"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__["default"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=fire-ref/initializers/export-application-global.js');
eval('define("fire-ref/models/entrytype", \n  ["ember-data","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = DS.Model.extend({\r\n      description: DS.attr(),\r\n      required: DS.hasMany("field", {\r\n        inverse: \'requiredForType\'\r\n      }),\r\n      optional: DS.hasMany("field", {\r\n        inverse: \'optionalForType\'\r\n      })\r\n    });\n  });//# sourceURL=fire-ref/models/entrytype.js');
eval('define("fire-ref/models/field", \n  ["ember-data","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = DS.Model.extend({\r\n      requiredForType: DS.hasMany("entrytype", {\r\n        inverse: \'required\'\r\n      }),\r\n      optionalForType: DS.hasMany("entrytype", {\r\n        inverse: \'optional\'\r\n      })\r\n    \r\n    });\n  });//# sourceURL=fire-ref/models/field.js');eval("define(\"fire-ref/models/ref\", \n  [\"ember-data\",\"fire-ref/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /* global Ember, bibtexParse */\r\n    var DS = __dependency1__[\"default\"];\n\n    var config = __dependency2__[\"default\"];\n\n    \r\n    var ref = DS.Model.extend({\r\n      type: DS.belongsTo('entrytype'),\r\n      label: DS.attr(),\r\n      title: DS.attr(),\r\n      year: DS.attr(),\r\n      author: DS.attr(),\r\n      journal: DS.attr(),\r\n      publisher: DS.attr(),\r\n      institution: DS.attr(),\r\n      volume: DS.attr(),\r\n      number: DS.attr(),\r\n      doi: DS.attr(), // http://dx.doi.org/\r\n      issn: DS.attr(),\r\n      pages: DS.attr(),\r\n      isbn: DS.attr(),\r\n    \r\n    \r\n    \r\n      bibtex: function(key, value/*, previousValue */){\r\n        var model = this;\r\n    \r\n        if(arguments.length > 1){\r\n          var json = bibtexParse.toJSON(value);\r\n          \r\n          model.set('id',   json[0].citationKey);\r\n          model.set('type', model.store.getById('entrytype', json[0].entryType));\r\n          Object.keys(json[0].entryTags).forEach(function(key){\r\n            var value = json[0].entryTags[key];\r\n              model.set(key, value);\r\n          });\r\n        }\r\n        var data = model.toJSON();\r\n        data.type = undefined; // store as the entryType, don't need it in the bibtex\r\n    \r\n        return bibtexParse.toBibtex([{\r\n          citationKey: model.id,\r\n          entryType: model.get('type').id,\r\n          entryTags: data\r\n        }]);\r\n      }.property('type','title','year','author','journal','publisher','path','reviewed','updated','volume','number','label'),\r\n      \r\n      path: DS.attr(),\r\n      reviewed: DS.attr(), // True/False\r\n      updated: DS.attr(),\r\n    \r\n      pretty_bibtex: function(key, value /*, previousValue */){\r\n        if(arguments.length > 1){\r\n          this.set('bibtex', value);\r\n        }\r\n        return this.get('bibtex').replace(/\\}, /ig,'},\\n\\t');\r\n      }.property('bibtex'),\r\n    \r\n      abbreviated_authors: function(){\r\n        var author = this.get('author');\r\n        function last_name(name){\r\n          var names = name.split(/\\s*,\\s+/g);\r\n          if(names.length === 1){\r\n            names = name.split(/\\s+/g);\r\n            return names[names.length-1];\r\n          }else{\r\n            return names[0];\r\n          }\r\n          \r\n        }\r\n        var abbreviated_authors = '';\r\n        if(author){\r\n          var authors = author.split(/\\s+and\\s+/ig);\r\n          if(authors.length > 3){\r\n            abbreviated_authors += last_name(authors[0]) + ' et al. ';\r\n          }else{\r\n            authors.forEach(function(name){\r\n              abbreviated_authors += last_name(name) + ', ';\r\n            });\r\n          }\r\n          return abbreviated_authors.replace(/, $/,'. ');\r\n        }else{\r\n          return '';\r\n        }\r\n    \r\n      }.property('author'),\r\n    \r\n      pretty_filename: function(){\r\n        var year = this.get('year');\r\n        var title = this.get('title');\r\n        \r\n        var filename = '';\r\n        filename += (year && year !== '') ? year + '. ' : '';\r\n    \r\n        var authors = this.get(\"abbreviated_authors\");\r\n        if(authors !== '')\r\n        {\r\n          filename += authors;\r\n        }\r\n        \r\n        if(title){\r\n          filename += title;\r\n        }\r\n        return filename.replace(/[^ .,a-zA-Z0-9\\-\\+]/g,'').replace(/. $/g,'');\r\n      }.property('year','author','title'),\r\n    \r\n      googleScholar: function(){\r\n        var url = 'http://scholar.google.ca/scholar?';\r\n        var authors = this.get('abbreviated_authors');\r\n        if(authors !== '')\r\n        {\r\n          url += \"as_sauthors=\" + authors.replace(/[^\\S]+/g, '+');\r\n        }\r\n    \r\n        url += \"&as_q=\" + this.get('title').replace(/[^\\S]+/g, '+');\r\n        return url;\r\n      }.property('author', 'title'),\r\n    \r\n    \r\n      preview: function(){\r\n        return config.baseURL + \"preview.html?\" +\r\n          \"path=\" + this.get('path') +\r\n          \"&access_token=\" + Ember.Application.client._oauth._token + \r\n          \"&title=\" + encodeURIComponent(this.get('title'));\r\n      }.property('path'),\r\n    \r\n    });\r\n    \r\n    \r\n    \r\n    __exports__[\"default\"] = ref;\n  });//# sourceURL=fire-ref/models/ref.js");
eval('define("fire-ref/models/user", \n  ["ember-data","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = DS.Model.extend({\r\n    \tcountryCode: DS.attr(),\r\n    \temail: DS.attr(),\r\n    \tname: DS.attr(),\r\n    \tprivateBytes: DS.attr(),\r\n    \tpublicAppUrl: DS.attr(),\r\n    \tquota: DS.attr(),\r\n    \treferralUrl: DS.attr(),\r\n    \tsharedBytes: DS.attr(),\r\n    \tuid: DS.attr(),\r\n    \tusedQuota: DS.attr(),\r\n    \r\n    \tprivate_pretty: function(){\r\n    \t\tvar size = this.get(\'privateBytes\');\r\n    \t\tvar unit = 0;\r\n    \t\tvar units = ["B","KB","MB","GB","TB"];\r\n    \t\twhile(size > 1024){\r\n    \t\t\tsize = size / 1024.0;\r\n    \t\t\tunit ++;\r\n    \t\t}\r\n    \t\treturn size.toFixed(1) + " " + units[unit];\r\n    \t}.property(\'privateBytes\'),\r\n    \tshared_pretty: function(){\r\n    \t\tvar size = this.get(\'sharedBytes\');\r\n    \t\tvar unit = 0;\r\n    \t\tvar units = ["B","KB","MB","GB","TB"];\r\n    \t\twhile(size > 1024){\r\n    \t\t\tsize = size / 1024.0;\r\n    \t\t\tunit ++;\r\n    \t\t}\r\n    \t\treturn size.toFixed(1) + " " + units[unit];\r\n    \t}.property(\'sharedBytes\'),\r\n    \tused_pretty: function(){\r\n    \t\tvar size = this.get(\'usedQuota\');\r\n    \t\tvar unit = 0;\r\n    \t\tvar units = ["B","KB","MB","GB","TB"];\r\n    \t\twhile(size > 1024){\r\n    \t\t\tsize = size / 1024.0;\r\n    \t\t\tunit ++;\r\n    \t\t}\r\n    \t\treturn size.toFixed(1) + " " + units[unit];\r\n    \t}.property(\'usedQuota\'),\r\n    \r\n    \tquota_pretty: function(){\r\n    \t\tvar size = this.get(\'quota\');\r\n    \t\tvar unit = 0;\r\n    \t\tvar units = ["B","KB","MB","GB","TB"];\r\n    \t\twhile(size > 1024){\r\n    \t\t\tsize = size / 1024.0;\r\n    \t\t\tunit ++;\r\n    \t\t}\r\n    \t\treturn size.toFixed(1) + " " + units[unit];\r\n    \t}.property(\'quota\'),\r\n    \r\n    \tprivate_percentage: function(){\r\n    \t\treturn this.get(\'privateBytes\') / this.get(\'quota\') * 100.0;\r\n    \t}.property(\'quota\', \'privateBytes\'),\r\n    \r\n    \tshared_percentage: function(){\r\n    \t\treturn this.get(\'sharedBytes\') / this.get(\'quota\') * 100.0;\r\n    \t}.property(\'quota\', \'sharedBytes\'),\r\n    \r\n    \ttotal_percentage: function(){\r\n    \t\treturn this.get(\'usedQuota\') / this.get(\'quota\') * 100.0;\r\n    \t}.property(\'quota\', \'usedQuota\')\r\n    });\n  });//# sourceURL=fire-ref/models/user.js');
eval('define("fire-ref/router", \n  ["ember","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    var config = __dependency2__["default"];\n\n    \r\n    var Router = Ember.Router.extend({\r\n      location: config.locationType\r\n    });\r\n    \r\n    Router.map(function() {\r\n      this.resource(\'refs\', function () {\r\n        this.resource(\'ref\', { path: \'/:ref_id\' });\r\n      });\r\n    \r\n      this.resource(\'user\');\r\n    });\r\n    \r\n    __exports__["default"] = Router;\n  });//# sourceURL=fire-ref/router.js');
eval('define("fire-ref/routes/ref", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.Route.extend({\r\n    });\n  });//# sourceURL=fire-ref/routes/ref.js');eval('define("fire-ref/routes/refs", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.Route.extend({\r\n    \tmodel: function(){\r\n    \t\tif(!this.container.lookup(\'controller:application\').get(\'loggedin\'))\r\n    \t\t{\r\n    \t\t\tthis.transitionTo(\'/\');\r\n    \t\t}\r\n    \t\treturn this.store.find(\'ref\');\r\n    \t}\r\n    });\n  });//# sourceURL=fire-ref/routes/refs.js');
eval("define(\"fire-ref/routes/user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.Route.extend({\r\n    \tmodel: function(){\r\n    \t\tif(!this.container.lookup('controller:application').get('loggedin'))\r\n    \t\t{\r\n    \t\t\tthis.transitionTo('/');\r\n    \t\t}\r\n    \t\treturn this.store.find('user', this.container.lookup('controller:application').get('currentUser'));\r\n    \t}\r\n    });\n  });//# sourceURL=fire-ref/routes/user.js");
eval('define("fire-ref/serializers/application", \n  ["ember-data","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var DS = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = DS.LSSerializer.extend({});\n  });//# sourceURL=fire-ref/serializers/application.js');eval('define("fire-ref/templates/application", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push("<span class=\\"glyphicon glyphicon-fire\\"></span> FireRef v");\n      stack1 = helpers._triageMustache.call(depth0, "version", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push("\\r\\n          <li>\\r\\n        \t\t");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "refs", options) : helperMissing.call(depth0, "link-to", "refs", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n        \t</li>\\r\\n          <li>");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "user", options) : helperMissing.call(depth0, "link-to", "user", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</li>\\r\\n          <li><a class=\\"btn\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "clearLocalStorage", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));\n      data.buffer.push(">Clear Cache</a></li>\\r\\n          <li><a class=\\"btn\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "doDropboxLogout", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));\n      data.buffer.push(">Sign out</a></li>\\r\\n        ");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push("References");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push("<span class=\\"glyphicon glyphicon-user\\"></span> ");\n      stack1 = helpers._triageMustache.call(depth0, "userName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push("\\r\\n          <li><a class=\\"btn\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "doDropboxLogin", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));\n      data.buffer.push(">Sign in with Dropbox</a>\\r\\n        </li>\\r\\n        ");\n      return buffer;\n      }\n\n      data.buffer.push("<nav class=\\"navbar navbar-default navbar-static-top\\" role=\\"navigation\\">\\r\\n  <div class=\\"container-fluid\\">\\r\\n    \x3c!-- Brand and toggle get grouped for better mobile display --\x3e\\r\\n    <div class=\\"navbar-header\\">\\r\\n      <button type=\\"button\\" class=\\"navbar-toggle\\" data-toggle=\\"collapse\\" data-target=\\"#bs-example-navbar-collapse-1\\">\\r\\n        <span class=\\"sr-only\\">Toggle navigation</span>\\r\\n        <span class=\\"icon-bar\\"></span>\\r\\n        <span class=\\"icon-bar\\"></span>\\r\\n        <span class=\\"icon-bar\\"></span>\\r\\n      </button>\\r\\n      ");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': ("navbar-brand")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "index", options) : helperMissing.call(depth0, "link-to", "index", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Collect the nav links, forms, and other content for toggling --\x3e\\r\\n    <div class=\\"collapse navbar-collapse\\" id=\\"bs-example-navbar-collapse-1\\">\\r\\n      <ul class=\\"nav navbar-nav\\">\\r\\n        ");\n      stack1 = helpers[\'if\'].call(depth0, "loggedin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n      </ul>\\r\\n      <ul class=\\"nav navbar-nav navbar-right\\">\\r\\n        <li><a href=\\"https://github.com/wrenoud/fire-ref/issues\\"><span class=\\"glyphicon glyphicon-question-sign\\"></span> Support</a></li>\\r\\n        \\r\\n      </ul>\\r\\n    </div>\x3c!-- /.navbar-collapse --\x3e\\r\\n  </div>\x3c!-- /.container-fluid --\x3e\\r\\n</nav>\\r\\n\\r\\n<div id=\\"content_panel\\">\\r\\n  ");\n      stack1 = helpers._triageMustache.call(depth0, "outlet", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n</div>\\r\\n");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/application.js');
eval('define("fire-ref/templates/components/label-filter", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push("<a ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': ("isCurrent:active :btn :btn-sm :btn-default :btn-block")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(">");\n      stack1 = helpers._triageMustache.call(depth0, "label", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</a>\\r\\n");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/components/label-filter.js');
eval('define("fire-ref/templates/index", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push("<div class=\\"container\\">\\r\\n\t<div class=\\"row\\">\\r\\n\t\t<div class=\\"col-md-12\\">\\r\\n\t\t\t<h1>Welcome to FireRef</h1>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t<div class=\\"row\\">\\r\\n\t\t<div class=\\"col-md-12\\">\\r\\n\t\t    <div class=\\"panel panel-default\\">\\r\\n\t\t        <div class=\\"panel-body\\">\\r\\n\t\t            <p>\\r\\n\t\t                FireRef is a browser based reference management systems built on <a href=\\"http://emberjs.com/\\" targer=\\"_blank\\">Ember.js</a> with Dropbox for storage.</p>\\r\\n\t\t        </div>\\r\\n\t\t    </div>\\r\\n\t\t    <div class=\\"panel panel-default\\">\\r\\n\t\t        <div class=\\"panel-heading\\">\\r\\n\t\t            <h2 class=\\"panel-title\\">Using FireRef</h2>\\r\\n\t\t        </div>\\r\\n\t\t        <div class=\\"panel-body\\">\\r\\n\t\t        \t<h3>First time using</h3>\\r\\n\t\t            <p>If you don\'t already have a Dropbox account <a href=\\"\\">Register with Dropbox</a> then sign in above.</p>\\r\\n\\r\\n\t\t            <h3>Uploading files</h3>\\r\\n\t\t            <p>FireRef creates a folder in your dropbox for your references under <b>/Apps/FireRef</b>. If you have a new pdf or word document just drop it in there, we\'ll find it.</p>\\r\\n\t\t        </div>\\r\\n\t\t    </div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t<div class=\\"row\\">\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n");\n      \n    });\n  });//# sourceURL=fire-ref/templates/index.js');
eval('define("fire-ref/templates/ref", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push("\\r\\n\t\t\t\t\t\t<button class=\\"btn btn-default\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "cancel", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));\n      data.buffer.push(">Undo</button>\\r\\n\t\t\t\t\t\t<button class=\\"btn btn-default\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "save", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));\n      data.buffer.push(">Save</button>\\r\\n\t\t\t\t\t");\n      return buffer;\n      }\n\n      data.buffer.push("<div class=\\"container-fluid\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': ("isDirty")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(">\\r\\n\t<div class=\\"row\\">\\r\\n\t\t<div class=\\"col-md-12\\">\\r\\n\t\t\t<div class=\\"row\\">\\r\\n\t\t\t\t<div class=\\"col-md-6\\">\\r\\n\t\t\t\t\\r\\n\t\t\t\t\t<a class=\\"btn btn-default\\" target=\\"_blank\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': ("preview")\n      },hashTypes:{\'href\': "ID"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(">Open</a>\\r\\n\t\t\t\t\t<a class=\\"btn btn-default\\" target=\\"_blank\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': ("googleScholar")\n      },hashTypes:{\'href\': "ID"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(">Search</a>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"col-md-6 text-right\\">\\r\\n\t\t\t\t\t");\n      stack1 = helpers[\'if\'].call(depth0, "isDirty", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\\r\\n\t\t\t<div class=\\"form-horizontal\\">\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t    <label class=\\"col-sm-3 control-label\\">Type</label>\\r\\n\t\t\t\t\t<div class=\\"col-sm-9\\">\\r\\n\t\t\t\t\t");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, "Ember.Select", {hash:{\n        \'contentBinding\': ("entrytypes"),\n        \'optionLabelPath\': ("content.id"),\n        \'optionValuePath\': ("content.id"),\n        \'selectionBinding\': ("type"),\n        \'class\': ("form-control")\n      },hashTypes:{\'contentBinding\': "STRING",\'optionLabelPath\': "STRING",\'optionValuePath\': "STRING",\'selectionBinding\': "STRING",\'class\': "STRING"},hashContexts:{\'contentBinding\': depth0,\'optionLabelPath\': depth0,\'optionValuePath\': depth0,\'selectionBinding\': depth0,\'class\': depth0},contexts:[depth0],types:["ID"],data:data})));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t    <label class=\\"col-sm-3 control-label\\">Label</label>\\r\\n\t\t\t\t    <div class=\\"col-sm-9\\">");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("label")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t<label class=\\"col-sm-3 control-label\\">Title</label>\\r\\n\t\t\t\t    <div class=\\"col-sm-9\\">");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("title")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t    <label class=\\"col-sm-3 control-label\\">Authors</label>\\r\\n\t\t\t\t    <div class=\\"col-sm-9\\">");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("author")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t<label class=\\"col-sm-3 control-label\\">Journal</label>\\r\\n\t\t\t\t    <div class=\\"col-sm-9\\">");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("journal")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\t\t\t<div class=\\"row\\">\\r\\n\t\t\t\t<div class=\\"col-md-3\\"></div>\\r\\n\t\t\t\t<div class=\\"col-md-3\\">\\r\\n\t\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("year"),\n        \'placeholder\': ("Year")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID",\'placeholder\': "STRING"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"col-md-3\\">\\r\\n\t\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("volume"),\n        \'placeholder\': ("Volume")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID",\'placeholder\': "STRING"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"col-md-3\\">\\r\\n\t\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("number"),\n        \'placeholder\': ("Number")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID",\'placeholder\': "STRING"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\t\t\t<div class=\\"form-horizontal\\">\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t<label class=\\"col-sm-3 control-label\\">Publisher</label>\\r\\n\t\t\t\t    <div class=\\"col-sm-9\\">");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("publisher")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t<label class=\\"col-sm-3 control-label\\">URL</label>\\r\\n\t\t\t\t    <div class=\\"col-sm-9\\">");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("url")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t\t<label class=\\"col-sm-3 control-label\\">DOI</label>\\r\\n\t\t\t\t    <div class=\\"col-sm-9\\">");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("doi")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t\t<div class=\\"form-group\\">\\r\\n\t\t    <label>Suggested Filename</label>\\r\\n\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': ("text"),\n        \'class\': ("form-control"),\n        \'value\': ("pretty_filename")\n      },hashTypes:{\'type\': "STRING",\'class\': "STRING",\'value\': "ID"},hashContexts:{\'type\': depth0,\'class\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));\n      data.buffer.push("\\r\\n\t\t</div>\\r\\n\t\t<div class=\\"form-group\\">\\r\\n\t\t    <label>BibTeX</label>\\r\\n\t\t    ");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'class\': ("form-control"),\n        \'rows\': ("6"),\n        \'value\': ("pretty_bibtex")\n      },hashTypes:{\'class\': "STRING",\'rows\': "STRING",\'value\': "ID"},hashContexts:{\'class\': depth0,\'rows\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "textarea", options))));\n      data.buffer.push("\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>\\r\\n");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/ref.js');
eval('define("fire-ref/templates/refs", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push("\\r\\n\t\t<div class=\\"btn-group\\">\\r\\n\t\t\t");\n      data.buffer.push(escapeExpression((helper = helpers[\'label-filter\'] || (depth0 && depth0[\'label-filter\']),options={hash:{\n        \'label\': ("All"),\n        \'filter\': ("*"),\n        \'action\': ("filter"),\n        \'current\': ("parent")\n      },hashTypes:{\'label\': "STRING",\'filter\': "STRING",\'action\': "STRING",\'current\': "ID"},hashContexts:{\'label\': depth0,\'filter\': depth0,\'action\': depth0,\'current\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "label-filter", options))));\n      data.buffer.push("\\r\\n\t\t\t");\n      data.buffer.push(escapeExpression((helper = helpers[\'label-filter\'] || (depth0 && depth0[\'label-filter\']),options={hash:{\n        \'label\': ("Unsorted"),\n        \'filter\': (""),\n        \'action\': ("filter"),\n        \'current\': ("parent")\n      },hashTypes:{\'label\': "STRING",\'filter\': "STRING",\'action\': "STRING",\'current\': "ID"},hashContexts:{\'label\': depth0,\'filter\': depth0,\'action\': depth0,\'current\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "label-filter", options))));\n      data.buffer.push("\\r\\n\t\t\t");\n      stack1 = helpers.each.call(depth0, "labels", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t</div>\\r\\n\t");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push("\\r\\n\t\t\t\t");\n      data.buffer.push(escapeExpression((helper = helpers[\'label-filter\'] || (depth0 && depth0[\'label-filter\']),options={hash:{\n        \'label\': (""),\n        \'filter\': (""),\n        \'action\': ("filter"),\n        \'current\': ("parent")\n      },hashTypes:{\'label\': "ID",\'filter\': "ID",\'action\': "STRING",\'current\': "ID"},hashContexts:{\'label\': depth0,\'filter\': depth0,\'action\': depth0,\'current\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "label-filter", options))));\n      data.buffer.push("\\r\\n\t\t\t");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push("\\r\\n\t\t\t\t<tr>\\r\\n\t\t\t\t\t");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': ("td"),\n        \'href\': (false),\n        \'colspan\': ("3")\n      },hashTypes:{\'tagName\': "STRING",\'href\': "BOOLEAN",\'colspan\': "STRING"},hashContexts:{\'tagName\': depth0,\'href\': depth0,\'colspan\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "ref", "", options) : helperMissing.call(depth0, "link-to", "ref", "", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t\t</tr>\\r\\n\t\t\t");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push("\\r\\n\t\t\t\t\t\t");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "ref", "", options) : helperMissing.call(depth0, "link-to", "ref", "", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("<br>\\r\\n\t\t\t\t\t\t");\n      stack1 = helpers[\'if\'].call(depth0, "year", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t\t\t\t");\n      stack1 = helpers[\'if\'].call(depth0, "author", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t\t\t\t");\n      stack1 = helpers[\'if\'].call(depth0, "journal", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t\t\t\t");\n      stack1 = helpers[\'if\'].call(depth0, "publisher", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t\t\t");\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, "title", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push("<span class=\\"year\\">");\n      stack1 = helpers._triageMustache.call(depth0, "year", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</span>.");\n      return buffer;\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push("<span class=\\"author\\">");\n      stack1 = helpers._triageMustache.call(depth0, "abbreviated_authors", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</span>");\n      return buffer;\n      }\n\n    function program12(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push("<span class=\\"journal\\">");\n      stack1 = helpers._triageMustache.call(depth0, "journal", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</span>.");\n      return buffer;\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push("<span class=\\"publisher\\">");\n      stack1 = helpers._triageMustache.call(depth0, "publisher", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</span>.");\n      return buffer;\n      }\n\n      data.buffer.push("<div id=\\"labels\\" class=\\"subpanel scrollable\\">\\r\\n\t<div class=\\"container-fluid\\">\\r\\n\t");\n      stack1 = helpers[\'with\'].call(depth0, "view", "as", "parent", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\"left subpanel scrollable\\">\\r\\n\t<div class=\\"container-fluid\\">\\r\\n\t\t<div class=\\"form-horizontal\\">\\r\\n\t\t\t<div class=\\"form-group\\">\\r\\n\t\t\t\t<label class=\\"col-sm-2 control-label\\">Sort by:</label>\\r\\n\t\t\t\t<div class=\\"col-sm-10\\">\\r\\n\t\t\t\t\t<div class=\\"btn-group btn-group-justified\\" role=\\"group\\" aria-label=\\"...\\">\\r\\n\t\t\t\t\t\t<a class=\\"btn btn-default\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "sort", "author", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));\n      data.buffer.push(">\\r\\n\t\t\t\t\t\t\tAuthor(s) <span ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (":glyphicon sortedByAuthor::hidden sortAscending:glyphicon-sort-by-alphabet:glyphicon-sort-by-alphabet-alt")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push("></span>\\r\\n\t\t\t\t\t\t</a>\\r\\n\t\t\t\t\t\t<a class=\\"btn btn-default\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "sort", "year", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));\n      data.buffer.push(">\\r\\n\t\t\t\t\t\t\tYear&nbsp;<span ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (":glyphicon sortedByYear::hidden sortAscending:glyphicon-sort-by-order:glyphicon-sort-by-order-alt")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push("></span>\\r\\n\t\t\t\t\t\t</a>\\r\\n\t\t\t\t\t\t<a class=\\"btn btn-default\\" ");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, "sort", "title", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));\n      data.buffer.push(">\\r\\n\t\t\t\t\t\t\tTitle <span ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (":glyphicon sortedByTitle::hidden sortAscending:glyphicon-sort-by-alphabet:glyphicon-sort-by-alphabet-alt")\n      },hashTypes:{\'class\': "STRING"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push("></span>\\r\\n\t\t\t\t\t\t</a>\\r\\n\t\t\t\t\t</div>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t\t<table id=\\"refs_table\\" class=\\"table\\">\\r\\n\t\t\t<tbody>\\r\\n\t\t\t");\n      stack1 = helpers.each.call(depth0, "filteredContent", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t</tbody>\\r\\n\t\t</table>\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\"dragger\\">\\r\\n</div>\\r\\n\\r\\n<div id=\\"reference_panel\\" class=\\"right subpanel scrollable\\">\\r\\n");\n      stack1 = helpers._triageMustache.call(depth0, "outlet", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n</div>");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/refs.js');
eval('define("fire-ref/templates/user", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n    __exports__["default"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push("<div class=\\"container\\">\\r\\n\t<div class=\\"row\\">\\r\\n\\r\\n\t\t<ul class=\\"list-group\\">\\r\\n\t\t  <li class=\\"list-group-item\\">Current User: <b>");\n      stack1 = helpers._triageMustache.call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(" (");\n      stack1 = helpers._triageMustache.call(depth0, "email", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(")</b></li>\\r\\n\t\t  <li class=\\"list-group-item\\">\\r\\n\t\t  \tData Usage: <b>");\n      stack1 = helpers._triageMustache.call(depth0, "used_pretty", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</b> of <b>");\n      stack1 = helpers._triageMustache.call(depth0, "quota_pretty", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("</b>\\r\\n\t\t  \t(");\n      stack1 = helpers._triageMustache.call(depth0, "shared_pretty", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(" shared and ");\n      stack1 = helpers._triageMustache.call(depth0, "private_pretty", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(" private)</li>\\r\\n\t\t  <li class=\\"list-group-item\\">\\r\\n\t\t\t<div class=\\"progress\\">\\r\\n\t\t\t  <div class=\\"shared progress-bar progress-bar-warning\\" role=\\"progressbar\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'aria-valuenow\': ("usedQuota")\n      },hashTypes:{\'aria-valuenow\': "ID"},hashContexts:{\'aria-valuenow\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(" aria-valuemin=\\"0\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'aria-valuemax\': ("quota")\n      },hashTypes:{\'aria-valuemax\': "ID"},hashContexts:{\'aria-valuemax\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(">\\r\\n\t\t\t    ");\n      stack1 = helpers._triageMustache.call(depth0, "shared_pretty", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t  </div>\\r\\n\t\t\t  <div class=\\"private progress-bar progress-bar-success\\" role=\\"progressbar\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'aria-valuenow\': ("usedQuota")\n      },hashTypes:{\'aria-valuenow\': "ID"},hashContexts:{\'aria-valuenow\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(" aria-valuemin=\\"0\\" ");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'aria-valuemax\': ("quota")\n      },hashTypes:{\'aria-valuemax\': "ID"},hashContexts:{\'aria-valuemax\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(">\\r\\n\t\t\t    ");\n      stack1 = helpers._triageMustache.call(depth0, "private_pretty", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push("\\r\\n\t\t\t  </div>\\r\\n\t\t\t</div>\\r\\n\t\t  </li>\\r\\n\t\t</ul>\\r\\n\\r\\n\t</div>\\r\\n</div>\\r\\n");\n      return buffer;\n      \n    });\n  });//# sourceURL=fire-ref/templates/user.js');
eval("define(\"fire-ref/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - adapters');\n    test('adapters/application.js should pass jshint', function() { \n      ok(true, 'adapters/application.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/adapters/application.jshint.js");eval("define(\"fire-ref/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('app.js should pass jshint', function() { \n      ok(true, 'app.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/app.jshint.js");
eval("define(\"fire-ref/tests/components/label-filter.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - components');\n    test('components/label-filter.js should pass jshint', function() { \n      ok(true, 'components/label-filter.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/components/label-filter.jshint.js");eval("define(\"fire-ref/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/application.js should pass jshint', function() { \n      ok(false, 'controllers/application.js should pass jshint.\\ncontrollers/application.js: line 93, col 20, \\'showError\\' is not defined.\\ncontrollers/application.js: line 129, col 28, \\'showError\\' is not defined.\\n\\n2 errors'); \n    });\n  });//# sourceURL=fire-ref/tests/controllers/application.jshint.js");
eval("define(\"fire-ref/tests/controllers/entrytypes.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/entrytypes.js should pass jshint', function() { \n      ok(true, 'controllers/entrytypes.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/controllers/entrytypes.jshint.js");eval("define(\"fire-ref/tests/controllers/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/ref.js should pass jshint', function() { \n      ok(false, 'controllers/ref.js should pass jshint.\\ncontrollers/ref.js: line 34, col 18, \\'showError\\' is not defined.\\n\\n1 error'); \n    });\n  });//# sourceURL=fire-ref/tests/controllers/ref.jshint.js");
eval("define(\"fire-ref/tests/controllers/refs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/refs.js should pass jshint', function() { \n      ok(true, 'controllers/refs.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/controllers/refs.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/helpers');\n    test('fire-ref/tests/helpers/resolver.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/helpers/resolver.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/helpers/resolver.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/helpers');\n    test('fire-ref/tests/helpers/start-app.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/helpers/start-app.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/helpers/start-app.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests');\n    test('fire-ref/tests/test-helper.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/test-helper.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/test-helper.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/components/label-filter-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/components');\n    test('fire-ref/tests/unit/components/label-filter-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/components/label-filter-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/components/label-filter-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/controllers');\n    test('fire-ref/tests/unit/controllers/application-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/controllers/application-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/controllers/application-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/controllers/entrytypes-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/controllers');\n    test('fire-ref/tests/unit/controllers/entrytypes-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/controllers/entrytypes-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/controllers/entrytypes-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/controllers/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/controllers');\n    test('fire-ref/tests/unit/controllers/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/controllers/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/controllers/ref-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/controllers/refs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/controllers');\n    test('fire-ref/tests/unit/controllers/refs-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/controllers/refs-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/controllers/refs-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/initializers/bibtex-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/initializers');\n    test('fire-ref/tests/unit/initializers/bibtex-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/initializers/bibtex-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/initializers/bibtex-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/models/field-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/models');\n    test('fire-ref/tests/unit/models/field-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/models/field-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/models/field-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/models/label-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/models');\n    test('fire-ref/tests/unit/models/label-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/models/label-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/models/label-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/models/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/models');\n    test('fire-ref/tests/unit/models/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/models/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/models/ref-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/models/type-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/models');\n    test('fire-ref/tests/unit/models/type-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/models/type-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/models/type-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/models/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/models');\n    test('fire-ref/tests/unit/models/user-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/models/user-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/models/user-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/routes/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/routes');\n    test('fire-ref/tests/unit/routes/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/routes/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/routes/ref-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/routes/refs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/routes');\n    test('fire-ref/tests/unit/routes/refs-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/routes/refs-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/routes/refs-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/routes/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/routes');\n    test('fire-ref/tests/unit/routes/user-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/routes/user-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/routes/user-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/serializers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/serializers');\n    test('fire-ref/tests/unit/serializers/application-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/serializers/application-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/serializers/application-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/views/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/views');\n    test('fire-ref/tests/unit/views/application-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/views/application-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/views/application-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/views/ref-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/views');\n    test('fire-ref/tests/unit/views/ref-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/views/ref-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/views/ref-test.jshint.js");eval("define(\"fire-ref/tests/fire-ref/tests/unit/views/refs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/views');\n    test('fire-ref/tests/unit/views/refs-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/views/refs-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/views/refs-test.jshint.js");
eval("define(\"fire-ref/tests/fire-ref/tests/unit/views/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - fire-ref/tests/unit/views');\n    test('fire-ref/tests/unit/views/user-test.js should pass jshint', function() { \n      ok(true, 'fire-ref/tests/unit/views/user-test.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/fire-ref/tests/unit/views/user-test.jshint.js");eval('define("fire-ref/tests/helpers/resolver", \n  ["ember/resolver","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    "use strict";\n    var Resolver = __dependency1__["default"];\n\n    var config = __dependency2__["default"];\n\n    \r\n    var resolver = Resolver.create();\r\n    \r\n    resolver.namespace = {\r\n      modulePrefix: config.modulePrefix,\r\n      podModulePrefix: config.podModulePrefix\r\n    };\r\n    \r\n    __exports__["default"] = resolver;\n  });//# sourceURL=fire-ref/tests/helpers/resolver.js');
eval('define("fire-ref/tests/helpers/start-app", \n  ["ember","fire-ref/app","fire-ref/router","fire-ref/config/environment","exports"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    var Application = __dependency2__["default"];\n\n    var Router = __dependency3__["default"];\n\n    var config = __dependency4__["default"];\n\n    \r\n    __exports__["default"] = function startApp(attrs) {\r\n      var App;\r\n    \r\n      var attributes = Ember.merge({}, config.APP);\r\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\r\n    \r\n      Router.reopen({\r\n        location: \'none\'\r\n      });\r\n    \r\n      Ember.run(function() {\r\n        App = Application.create(attributes);\r\n        App.setupForTesting();\r\n        App.injectTestHelpers();\r\n      });\r\n    \r\n      App.reset(); // this shouldn\'t be needed, i want to be able to "start an app at a specific URL"\r\n    \r\n      return App;\r\n    }\n  });//# sourceURL=fire-ref/tests/helpers/start-app.js');
eval("define(\"fire-ref/tests/initializers/bibtex.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - initializers');\n    test('initializers/bibtex.js should pass jshint', function() { \n      ok(true, 'initializers/bibtex.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/initializers/bibtex.jshint.js");eval("define(\"fire-ref/tests/initializers/dropbox.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - initializers');\n    test('initializers/dropbox.js should pass jshint', function() { \n      ok(true, 'initializers/dropbox.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/initializers/dropbox.jshint.js");
eval("define(\"fire-ref/tests/models/entrytype.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/entrytype.js should pass jshint', function() { \n      ok(true, 'models/entrytype.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/models/entrytype.jshint.js");eval("define(\"fire-ref/tests/models/field.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/field.js should pass jshint', function() { \n      ok(true, 'models/field.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/models/field.jshint.js");
eval("define(\"fire-ref/tests/models/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/ref.js should pass jshint', function() { \n      ok(true, 'models/ref.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/models/ref.jshint.js");eval("define(\"fire-ref/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/user.js should pass jshint', function() { \n      ok(true, 'models/user.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/models/user.jshint.js");
eval("define(\"fire-ref/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('router.js should pass jshint', function() { \n      ok(true, 'router.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/router.jshint.js");eval("define(\"fire-ref/tests/routes/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/ref.js should pass jshint', function() { \n      ok(true, 'routes/ref.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/routes/ref.jshint.js");
eval("define(\"fire-ref/tests/routes/refs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/refs.js should pass jshint', function() { \n      ok(true, 'routes/refs.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/routes/refs.jshint.js");eval("define(\"fire-ref/tests/routes/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/user.js should pass jshint', function() { \n      ok(true, 'routes/user.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/routes/user.jshint.js");
eval("define(\"fire-ref/tests/serializers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - serializers');\n    test('serializers/application.js should pass jshint', function() { \n      ok(true, 'serializers/application.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/serializers/application.jshint.js");eval('define("fire-ref/tests/test-helper", \n  ["fire-ref/tests/helpers/resolver","ember-qunit"],\n  function(__dependency1__, __dependency2__) {\n    "use strict";\n    var resolver = __dependency1__["default"];\n\n    var setResolver = __dependency2__.setResolver;\n\n    \r\n    setResolver(resolver);\r\n    \r\n    document.write(\'<div id="ember-testing-container"><div id="ember-testing"></div></div>\');\r\n    \r\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\r\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\r\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=fire-ref/tests/test-helper.js');
eval("define(\"fire-ref/tests/unit/components/label-filter-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    \r\n    moduleForComponent('label-filter', 'LabelFilterComponent', {\r\n      // specify the other units that are required for this test\r\n      // needs: ['component:foo', 'helper:bar']\r\n    });\r\n    \r\n    test('it renders', function() {\r\n      expect(2);\r\n    \r\n      // creates the component instance\r\n      var component = this.subject();\r\n      equal(component._state, 'preRender');\r\n    \r\n      // appends the component to the page\r\n      this.append();\r\n      equal(component._state, 'inDOM');\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/components/label-filter-test.js");
eval("define(\"fire-ref/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    \r\n    moduleFor('controller:application', 'ApplicationController', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['controller:foo']\r\n    });\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var controller = this.subject();\r\n      ok(controller);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/controllers/application-test.js");
eval("define(\"fire-ref/tests/unit/controllers/entrytypes-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('controller:entrytypes', 'EntrytypesController', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['controller:foo']\r\n    });\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var controller = this.subject();\r\n      ok(controller);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/controllers/entrytypes-test.js");
eval("define(\"fire-ref/tests/unit/controllers/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('controller:ref', 'RefController', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['controller:foo']\r\n    });\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var controller = this.subject();\r\n      ok(controller);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/controllers/ref-test.js");
eval("define(\"fire-ref/tests/unit/controllers/refs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('controller:refs', 'RefsController', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['controller:foo']\r\n    });\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var controller = this.subject();\r\n      ok(controller);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/controllers/refs-test.js");
eval('define("fire-ref/tests/unit/initializers/bibtex-test", \n  ["ember","fire-ref/initializers/bibtex"],\n  function(__dependency1__, __dependency2__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    var initialize = __dependency2__.initialize;\n\n    \r\n    var container, application;\r\n    \r\n    module(\'BibtexInitializer\', {\r\n      setup: function() {\r\n        Ember.run(function() {\r\n          container = new Ember.Container();\r\n          application = Ember.Application.create();\r\n          application.deferReadiness();\r\n        });\r\n      }\r\n    });\r\n    \r\n    // Replace this with your real tests.\r\n    test(\'it works\', function() {\r\n      initialize(container, application);\r\n    \r\n      // you would normally confirm the results of the initializer here\r\n      ok(true);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/initializers/bibtex-test.js');
eval("define(\"fire-ref/tests/unit/models/field-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    \r\n    moduleForModel('field', 'Field', {\r\n      // Specify the other units that are required for this test.\r\n      needs: []\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var model = this.subject();\r\n      // var store = this.store();\r\n      ok(!!model);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/models/field-test.js");
eval("define(\"fire-ref/tests/unit/models/label-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    \r\n    moduleForModel('label', 'Label', {\r\n      // Specify the other units that are required for this test.\r\n      needs: []\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var model = this.subject();\r\n      // var store = this.store();\r\n      ok(!!model);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/models/label-test.js");
eval("define(\"fire-ref/tests/unit/models/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    \r\n    moduleForModel('ref', 'Ref', {\r\n      // Specify the other units that are required for this test.\r\n      needs: []\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var model = this.subject();\r\n      // var store = this.store();\r\n      ok(!!model);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/models/ref-test.js");
eval("define(\"fire-ref/tests/unit/models/type-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    \r\n    moduleForModel('type', 'Type', {\r\n      // Specify the other units that are required for this test.\r\n      needs: []\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var model = this.subject();\r\n      // var store = this.store();\r\n      ok(!!model);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/models/type-test.js");
eval("define(\"fire-ref/tests/unit/models/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n\n    \r\n    moduleForModel('user', 'User', {\r\n      // Specify the other units that are required for this test.\r\n      needs: []\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var model = this.subject();\r\n      // var store = this.store();\r\n      ok(model);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/models/user-test.js");
eval("define(\"fire-ref/tests/unit/routes/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('route:ref', 'RefRoute', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['controller:foo']\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var route = this.subject();\r\n      ok(route);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/routes/ref-test.js");
eval("define(\"fire-ref/tests/unit/routes/refs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('route:refs', 'RefsRoute', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['controller:foo']\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var route = this.subject();\r\n      ok(route);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/routes/refs-test.js");
eval("define(\"fire-ref/tests/unit/routes/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    \r\n    moduleFor('route:user', 'UserRoute', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['controller:foo']\r\n    });\r\n    \r\n    test('it exists', function() {\r\n      var route = this.subject();\r\n      ok(route);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/routes/user-test.js");
eval("define(\"fire-ref/tests/unit/serializers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('serializer:application', 'ApplicationSerializer', {\r\n      // Specify the other units that are required for this test.\r\n      // needs: ['serializer:foo']\r\n    });\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var serializer = this.subject();\r\n      ok(serializer);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/serializers/application-test.js");
eval("define(\"fire-ref/tests/unit/views/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('view:application', 'ApplicationView');\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var view = this.subject();\r\n      ok(view);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/views/application-test.js");
eval("define(\"fire-ref/tests/unit/views/ref-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('view:ref', 'RefView');\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var view = this.subject();\r\n      ok(view);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/views/ref-test.js");eval("define(\"fire-ref/tests/unit/views/refs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('view:refs', 'RefsView');\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var view = this.subject();\r\n      ok(view);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/views/refs-test.js");
eval("define(\"fire-ref/tests/unit/views/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    \r\n    moduleFor('view:user', 'UserView');\r\n    \r\n    // Replace this with your real tests.\r\n    test('it exists', function() {\r\n      var view = this.subject();\r\n      ok(view);\r\n    });\n  });//# sourceURL=fire-ref/tests/unit/views/user-test.js");eval("define(\"fire-ref/tests/views/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/application.js should pass jshint', function() { \n      ok(true, 'views/application.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/views/application.jshint.js");
eval("define(\"fire-ref/tests/views/ref.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/ref.js should pass jshint', function() { \n      ok(true, 'views/ref.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/views/ref.jshint.js");eval("define(\"fire-ref/tests/views/refs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/refs.js should pass jshint', function() { \n      ok(true, 'views/refs.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/views/refs.jshint.js");
eval("define(\"fire-ref/tests/views/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/user.js should pass jshint', function() { \n      ok(true, 'views/user.js should pass jshint.'); \n    });\n  });//# sourceURL=fire-ref/tests/views/user.jshint.js");eval('define("fire-ref/views/application", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.View.extend({\r\n      didInsertElement: function(){\r\n        var controller = this.get(\'controller\');\r\n        controller.triggerAction({\r\n          action:\'trySilentDropboxLogin\',\r\n          target: controller\r\n        });\r\n    \r\n        // trigger layout\r\n        Ember.$(\'#content_panel\').position({my: "left top", at:"left bottom", of: Ember.$(".navbar")});\r\n        Ember.$(\'#content_panel\').height(window.innerHeight - Ember.$(".navbar").height());\r\n        Ember.$(window).resize(function(){\r\n          Ember.$(\'#content_panel\').height(window.innerHeight - Ember.$(".navbar").height());\r\n        });\r\n      }\r\n    });\n  });//# sourceURL=fire-ref/views/application.js');
eval('define("fire-ref/views/ref", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.View.extend({\r\n    \tdidInsertElement: function(){\r\n    \t}\r\n    });\n  });//# sourceURL=fire-ref/views/ref.js');eval('define("fire-ref/views/refs", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.View.extend({\r\n    \tdidInsertElement: function(){\r\n    \t\tEmber.Application.make_resizable("#content_panel");\r\n    \t}\r\n    \r\n    });\n  });//# sourceURL=fire-ref/views/refs.js');
eval('define("fire-ref/views/user", \n  ["ember","exports"],\n  function(__dependency1__, __exports__) {\n    "use strict";\n    var Ember = __dependency1__["default"];\n\n    \r\n    __exports__["default"] = Ember.View.extend({\r\n    \tdidInsertElement: function(){\r\n    \t\tvar model = this.get(\'controller.model\');\r\n    \t\tEmber.$(".progress .shared")[0].style.width = model.get(\'shared_percentage\') + "%";\r\n    \t\tEmber.$(".progress .private")[0].style.width = model.get(\'private_percentage\') + "%";\r\n    \t}\r\n    });\n  });//# sourceURL=fire-ref/views/user.js');
define("fire-ref/config/environment",["ember"],function(b){try{var a="fire-ref/config/environment",c=b["default"].$('meta[name="'+a+'"]').attr("content");return{"default":JSON.parse(unescape(c))}}catch(d){throw Error('Could not read config from meta tag with name "'+a+'".');}});
runningTests?require("fire-ref/tests/test-helper"):require("fire-ref/app")["default"].create({DROPBOX_FOLDER:"/Apps/FireRef",LOCALSTORAGE_NS:"wrenoud/fire-ref",VERSION:"0.3.0",dropboxRecieverUrl:"https://wrenoud.github.io/fire-ref/",FORCE_SSL:!0});
